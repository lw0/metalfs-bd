-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mtl_get64be_1 is
port (
    ap_ready : OUT STD_LOGIC;
    busline_V_read : IN STD_LOGIC_VECTOR (511 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of mtl_get64be_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_67 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100111";
    constant ap_const_lv32_68 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal p_Result_7_fu_58_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_72_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_82_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_42_fu_92_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_43_fu_102_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_44_fu_112_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_45_fu_122_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_41_fu_48_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_fu_132_p9 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_68_p1 : STD_LOGIC_VECTOR (63 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return <= std_logic_vector(unsigned(tmp_4_fu_132_p9) + unsigned(p_Result_s_fu_68_p1));
    p_Result_7_fu_58_p4 <= busline_V_read(127 downto 120);
    p_Result_s_fu_68_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_7_fu_58_p4),64));
    tmp_41_fu_48_p4 <= busline_V_read(119 downto 112);
    tmp_42_fu_92_p4 <= busline_V_read(87 downto 80);
    tmp_43_fu_102_p4 <= busline_V_read(95 downto 88);
    tmp_44_fu_112_p4 <= busline_V_read(103 downto 96);
    tmp_45_fu_122_p4 <= busline_V_read(111 downto 104);
    tmp_4_fu_132_p9 <= (((((((tmp_fu_72_p4 & tmp_s_fu_82_p4) & tmp_42_fu_92_p4) & tmp_43_fu_102_p4) & tmp_44_fu_112_p4) & tmp_45_fu_122_p4) & tmp_41_fu_48_p4) & ap_const_lv8_0);
    tmp_fu_72_p4 <= busline_V_read(71 downto 64);
    tmp_s_fu_82_p4 <= busline_V_read(79 downto 72);
end behav;
