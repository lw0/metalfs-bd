-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity op_mem_write_impl_Lo is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    write_mem_config_off_8_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    write_mem_config_off_8_empty_n : IN STD_LOGIC;
    write_mem_config_off_8_read : OUT STD_LOGIC;
    padded_word_stream_V_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    padded_word_stream_V_empty_n : IN STD_LOGIC;
    padded_word_stream_V_read : OUT STD_LOGIC;
    padded_word_stream_V_1_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    padded_word_stream_V_1_empty_n : IN STD_LOGIC;
    padded_word_stream_V_1_read : OUT STD_LOGIC;
    padded_word_stream_V_2_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    padded_word_stream_V_2_empty_n : IN STD_LOGIC;
    padded_word_stream_V_2_read : OUT STD_LOGIC;
    m_axi_dout_gmem_V_AWVALID : OUT STD_LOGIC;
    m_axi_dout_gmem_V_AWREADY : IN STD_LOGIC;
    m_axi_dout_gmem_V_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_dout_gmem_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dout_gmem_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_dout_gmem_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dout_gmem_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dout_gmem_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dout_gmem_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dout_gmem_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dout_gmem_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dout_gmem_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dout_gmem_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dout_gmem_V_WVALID : OUT STD_LOGIC;
    m_axi_dout_gmem_V_WREADY : IN STD_LOGIC;
    m_axi_dout_gmem_V_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_dout_gmem_V_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_dout_gmem_V_WLAST : OUT STD_LOGIC;
    m_axi_dout_gmem_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dout_gmem_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dout_gmem_V_ARVALID : OUT STD_LOGIC;
    m_axi_dout_gmem_V_ARREADY : IN STD_LOGIC;
    m_axi_dout_gmem_V_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_dout_gmem_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dout_gmem_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_dout_gmem_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dout_gmem_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dout_gmem_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dout_gmem_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dout_gmem_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dout_gmem_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dout_gmem_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dout_gmem_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dout_gmem_V_RVALID : IN STD_LOGIC;
    m_axi_dout_gmem_V_RREADY : OUT STD_LOGIC;
    m_axi_dout_gmem_V_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_dout_gmem_V_RLAST : IN STD_LOGIC;
    m_axi_dout_gmem_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dout_gmem_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dout_gmem_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dout_gmem_V_BVALID : IN STD_LOGIC;
    m_axi_dout_gmem_V_BREADY : OUT STD_LOGIC;
    m_axi_dout_gmem_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dout_gmem_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dout_gmem_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    dout_gmem_V_offset_dout : IN STD_LOGIC_VECTOR (57 downto 0);
    dout_gmem_V_offset_empty_n : IN STD_LOGIC;
    dout_gmem_V_offset_read : OUT STD_LOGIC;
    write_mem_config_off_6_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    write_mem_config_off_6_empty_n : IN STD_LOGIC;
    write_mem_config_off_6_read : OUT STD_LOGIC;
    write_mem_config_siz : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of op_mem_write_impl_Lo is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv53_1 : STD_LOGIC_VECTOR (52 downto 0) := "00000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal write_mem_config_off_8_blk_n : STD_LOGIC;
    signal padded_word_stream_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal exitcond_i_i_i_i_i_reg_461 : STD_LOGIC_VECTOR (0 downto 0);
    signal padded_word_stream_V_1_blk_n : STD_LOGIC;
    signal padded_word_stream_V_2_blk_n : STD_LOGIC;
    signal dout_gmem_V_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal dout_gmem_V_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal dout_gmem_V_blk_n_W : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal exitcond_i_i_i_i_i_reg_461_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal dout_gmem_V_offset_blk_n : STD_LOGIC;
    signal write_mem_config_off_6_blk_n : STD_LOGIC;
    signal k_i_i_i_i_i_reg_233 : STD_LOGIC_VECTOR (6 downto 0);
    signal dout_gmem_V_offset_r_reg_407 : STD_LOGIC_VECTOR (57 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal tmp_27_i_i_reg_412 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_28_i_i_reg_417 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_29_i_i_reg_422 : STD_LOGIC_VECTOR (57 downto 0);
    signal dout_gmem_V_offset_c_fu_295_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal dout_gmem_V_offset_c_reg_427 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal write_blocks_cast_i_s_fu_320_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal write_blocks_cast_i_s_reg_432 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_i_i_fu_324_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_i_i_reg_437 : STD_LOGIC_VECTOR (63 downto 0);
    signal total_blocks_fu_347_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal total_blocks_reg_445 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sum_i_i_fu_364_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sum_i_i_reg_450 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_22_i_i_i_i_i_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_ioackin_m_axi_dout_gmem_V_AWREADY : STD_LOGIC;
    signal exitcond_i_i_i_i_i_fu_375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state5_pp0_stage0_iter0 : BOOLEAN;
    signal padded_word_stream_V0_status : STD_LOGIC;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_sig_ioackin_m_axi_dout_gmem_V_WREADY : STD_LOGIC;
    signal ap_block_state7_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal k_fu_381_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_data_V_reg_470 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state5 : STD_LOGIC;
    signal total_blocks_i_i_i_i_reg_222 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_reg_ioackin_m_axi_dout_gmem_V_AWREADY : STD_LOGIC := '0';
    signal ap_reg_ioackin_m_axi_dout_gmem_V_WREADY : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal padded_word_stream_V0_update : STD_LOGIC;
    signal tmp_last_V_fu_174 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_i_fu_258_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_19_i_i_i_i_i_fu_264_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal first_block_cast_i_i_fu_298_p1 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp_20_i_i_i_i_i_fu_304_p2 : STD_LOGIC_VECTOR (52 downto 0);
    signal tmp_20_cast_i_i_i_i_s_fu_310_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal last_block_cast_i_i_s_fu_301_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal write_blocks_fu_314_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_21_i_i_i_i_i_fu_330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_i_i_i_i_i_fu_335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_353_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_i_i_fu_359_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_22_i_i_i_i_i_fu_341_p2 = ap_const_lv1_0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_sig_ioackin_m_axi_dout_gmem_V_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state5);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_sig_ioackin_m_axi_dout_gmem_V_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_m_axi_dout_gmem_V_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_dout_gmem_V_AWREADY <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    if ((ap_sig_ioackin_m_axi_dout_gmem_V_AWREADY = ap_const_logic_1)) then 
                        ap_reg_ioackin_m_axi_dout_gmem_V_AWREADY <= ap_const_logic_0;
                    elsif ((m_axi_dout_gmem_V_AWREADY = ap_const_logic_1)) then 
                        ap_reg_ioackin_m_axi_dout_gmem_V_AWREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_m_axi_dout_gmem_V_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_dout_gmem_V_WREADY <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_i_i_i_i_i_reg_461_pp0_iter1_reg = ap_const_lv1_0))) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then 
                        ap_reg_ioackin_m_axi_dout_gmem_V_WREADY <= ap_const_logic_0;
                    elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (m_axi_dout_gmem_V_WREADY = ap_const_logic_1))) then 
                        ap_reg_ioackin_m_axi_dout_gmem_V_WREADY <= ap_const_logic_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    k_i_i_i_i_i_reg_233_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_i_i_i_i_i_fu_375_p2 = ap_const_lv1_0))) then 
                k_i_i_i_i_i_reg_233 <= k_fu_381_p2;
            elsif (((ap_sig_ioackin_m_axi_dout_gmem_V_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                k_i_i_i_i_i_reg_233 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    tmp_last_V_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_i_i_i_i_i_reg_461 = ap_const_lv1_0))) then 
                tmp_last_V_fu_174 <= padded_word_stream_V_2_dout;
            elsif ((not(((write_mem_config_off_8_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (write_mem_config_off_6_empty_n = ap_const_logic_0) or (dout_gmem_V_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                tmp_last_V_fu_174 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    total_blocks_i_i_i_i_reg_222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((m_axi_dout_gmem_V_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                total_blocks_i_i_i_i_reg_222 <= total_blocks_reg_445;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                total_blocks_i_i_i_i_reg_222 <= ap_const_lv64_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    dout_gmem_V_offset_c_reg_427(57 downto 0) <= dout_gmem_V_offset_c_fu_295_p1(57 downto 0);
                    tmp_3_i_i_reg_437(57 downto 0) <= tmp_3_i_i_fu_324_p1(57 downto 0);
                write_blocks_cast_i_s_reg_432 <= write_blocks_cast_i_s_fu_320_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((write_mem_config_off_8_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (write_mem_config_off_6_empty_n = ap_const_logic_0) or (dout_gmem_V_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                dout_gmem_V_offset_r_reg_407 <= dout_gmem_V_offset_dout;
                tmp_27_i_i_reg_412 <= write_mem_config_off_8_dout(63 downto 12);
                tmp_28_i_i_reg_417 <= tmp_19_i_i_i_i_i_fu_264_p2(63 downto 12);
                tmp_29_i_i_reg_422 <= write_mem_config_off_6_dout(63 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond_i_i_i_i_i_reg_461 <= exitcond_i_i_i_i_i_fu_375_p2;
                exitcond_i_i_i_i_i_reg_461_pp0_iter1_reg <= exitcond_i_i_i_i_i_reg_461;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_22_i_i_i_i_i_fu_341_p2 = ap_const_lv1_1))) then
                sum_i_i_reg_450 <= sum_i_i_fu_364_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_i_i_i_i_i_reg_461 = ap_const_lv1_0))) then
                tmp_data_V_reg_470 <= padded_word_stream_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                total_blocks_reg_445 <= total_blocks_fu_347_p2;
            end if;
        end if;
    end process;
    dout_gmem_V_offset_c_reg_427(63 downto 58) <= "000000";
    tmp_3_i_i_reg_437(63 downto 58) <= "000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, write_mem_config_off_8_empty_n, m_axi_dout_gmem_V_BVALID, dout_gmem_V_offset_empty_n, write_mem_config_off_6_empty_n, ap_enable_reg_pp0_iter1, ap_CS_fsm_state12, ap_CS_fsm_state4, ap_enable_reg_pp0_iter2, ap_CS_fsm_state3, tmp_22_i_i_i_i_i_fu_341_p2, ap_sig_ioackin_m_axi_dout_gmem_V_AWREADY, exitcond_i_i_i_i_i_fu_375_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((write_mem_config_off_8_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (write_mem_config_off_6_empty_n = ap_const_logic_0) or (dout_gmem_V_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_22_i_i_i_i_i_fu_341_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_sig_ioackin_m_axi_dout_gmem_V_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_i_i_i_i_i_fu_375_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (exitcond_i_i_i_i_i_fu_375_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((m_axi_dout_gmem_V_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond_i_i_i_i_i_reg_461, padded_word_stream_V0_status)
    begin
                ap_block_pp0_stage0_01001 <= ((padded_word_stream_V0_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_i_i_i_i_i_reg_461 = ap_const_lv1_0));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond_i_i_i_i_i_reg_461, ap_enable_reg_pp0_iter2, padded_word_stream_V0_status, ap_block_state7_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state7_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((padded_word_stream_V0_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_i_i_i_i_i_reg_461 = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, exitcond_i_i_i_i_i_reg_461, ap_enable_reg_pp0_iter2, padded_word_stream_V0_status, ap_block_state7_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state7_io) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((padded_word_stream_V0_status = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (exitcond_i_i_i_i_i_reg_461 = ap_const_lv1_0)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, write_mem_config_off_8_empty_n, dout_gmem_V_offset_empty_n, write_mem_config_off_6_empty_n)
    begin
                ap_block_state1 <= ((write_mem_config_off_8_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (write_mem_config_off_6_empty_n = ap_const_logic_0) or (dout_gmem_V_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state5_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage0_iter1_assign_proc : process(exitcond_i_i_i_i_i_reg_461, padded_word_stream_V0_status)
    begin
                ap_block_state6_pp0_stage0_iter1 <= ((padded_word_stream_V0_status = ap_const_logic_0) and (exitcond_i_i_i_i_i_reg_461 = ap_const_lv1_0));
    end process;


    ap_block_state7_io_assign_proc : process(exitcond_i_i_i_i_i_reg_461_pp0_iter1_reg, ap_sig_ioackin_m_axi_dout_gmem_V_WREADY)
    begin
                ap_block_state7_io <= ((ap_sig_ioackin_m_axi_dout_gmem_V_WREADY = ap_const_logic_0) and (exitcond_i_i_i_i_i_reg_461_pp0_iter1_reg = ap_const_lv1_0));
    end process;

        ap_block_state7_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state5_assign_proc : process(exitcond_i_i_i_i_i_fu_375_p2)
    begin
        if ((exitcond_i_i_i_i_i_fu_375_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state3, tmp_22_i_i_i_i_i_fu_341_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_22_i_i_i_i_i_fu_341_p2 = ap_const_lv1_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state3, tmp_22_i_i_i_i_i_fu_341_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_22_i_i_i_i_i_fu_341_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_m_axi_dout_gmem_V_AWREADY_assign_proc : process(m_axi_dout_gmem_V_AWREADY, ap_reg_ioackin_m_axi_dout_gmem_V_AWREADY)
    begin
        if ((ap_reg_ioackin_m_axi_dout_gmem_V_AWREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_m_axi_dout_gmem_V_AWREADY <= m_axi_dout_gmem_V_AWREADY;
        else 
            ap_sig_ioackin_m_axi_dout_gmem_V_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_m_axi_dout_gmem_V_WREADY_assign_proc : process(m_axi_dout_gmem_V_WREADY, ap_reg_ioackin_m_axi_dout_gmem_V_WREADY)
    begin
        if ((ap_reg_ioackin_m_axi_dout_gmem_V_WREADY = ap_const_logic_0)) then 
            ap_sig_ioackin_m_axi_dout_gmem_V_WREADY <= m_axi_dout_gmem_V_WREADY;
        else 
            ap_sig_ioackin_m_axi_dout_gmem_V_WREADY <= ap_const_logic_1;
        end if; 
    end process;


    dout_gmem_V_blk_n_AW_assign_proc : process(m_axi_dout_gmem_V_AWREADY, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dout_gmem_V_blk_n_AW <= m_axi_dout_gmem_V_AWREADY;
        else 
            dout_gmem_V_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    dout_gmem_V_blk_n_B_assign_proc : process(m_axi_dout_gmem_V_BVALID, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dout_gmem_V_blk_n_B <= m_axi_dout_gmem_V_BVALID;
        else 
            dout_gmem_V_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    dout_gmem_V_blk_n_W_assign_proc : process(m_axi_dout_gmem_V_WREADY, ap_block_pp0_stage0, ap_enable_reg_pp0_iter2, exitcond_i_i_i_i_i_reg_461_pp0_iter1_reg)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_i_i_i_i_i_reg_461_pp0_iter1_reg = ap_const_lv1_0))) then 
            dout_gmem_V_blk_n_W <= m_axi_dout_gmem_V_WREADY;
        else 
            dout_gmem_V_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;


    dout_gmem_V_offset_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, dout_gmem_V_offset_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            dout_gmem_V_offset_blk_n <= dout_gmem_V_offset_empty_n;
        else 
            dout_gmem_V_offset_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dout_gmem_V_offset_c_fu_295_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dout_gmem_V_offset_r_reg_407),64));

    dout_gmem_V_offset_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, write_mem_config_off_8_empty_n, dout_gmem_V_offset_empty_n, write_mem_config_off_6_empty_n)
    begin
        if ((not(((write_mem_config_off_8_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (write_mem_config_off_6_empty_n = ap_const_logic_0) or (dout_gmem_V_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            dout_gmem_V_offset_read <= ap_const_logic_1;
        else 
            dout_gmem_V_offset_read <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_i_i_i_i_i_fu_375_p2 <= "1" when (k_i_i_i_i_i_reg_233 = ap_const_lv7_40) else "0";
    first_block_cast_i_i_fu_298_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_27_i_i_reg_412),53));
    k_fu_381_p2 <= std_logic_vector(unsigned(k_i_i_i_i_i_reg_233) + unsigned(ap_const_lv7_1));
    last_block_cast_i_i_s_fu_301_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_28_i_i_reg_417),54));
    m_axi_dout_gmem_V_ARADDR <= ap_const_lv64_0;
    m_axi_dout_gmem_V_ARBURST <= ap_const_lv2_0;
    m_axi_dout_gmem_V_ARCACHE <= ap_const_lv4_0;
    m_axi_dout_gmem_V_ARID <= ap_const_lv1_0;
    m_axi_dout_gmem_V_ARLEN <= ap_const_lv32_0;
    m_axi_dout_gmem_V_ARLOCK <= ap_const_lv2_0;
    m_axi_dout_gmem_V_ARPROT <= ap_const_lv3_0;
    m_axi_dout_gmem_V_ARQOS <= ap_const_lv4_0;
    m_axi_dout_gmem_V_ARREGION <= ap_const_lv4_0;
    m_axi_dout_gmem_V_ARSIZE <= ap_const_lv3_0;
    m_axi_dout_gmem_V_ARUSER <= ap_const_lv1_0;
    m_axi_dout_gmem_V_ARVALID <= ap_const_logic_0;
    m_axi_dout_gmem_V_AWADDR <= sum_i_i_reg_450;
    m_axi_dout_gmem_V_AWBURST <= ap_const_lv2_0;
    m_axi_dout_gmem_V_AWCACHE <= ap_const_lv4_0;
    m_axi_dout_gmem_V_AWID <= ap_const_lv1_0;
    m_axi_dout_gmem_V_AWLEN <= ap_const_lv32_40;
    m_axi_dout_gmem_V_AWLOCK <= ap_const_lv2_0;
    m_axi_dout_gmem_V_AWPROT <= ap_const_lv3_0;
    m_axi_dout_gmem_V_AWQOS <= ap_const_lv4_0;
    m_axi_dout_gmem_V_AWREGION <= ap_const_lv4_0;
    m_axi_dout_gmem_V_AWSIZE <= ap_const_lv3_0;
    m_axi_dout_gmem_V_AWUSER <= ap_const_lv1_0;

    m_axi_dout_gmem_V_AWVALID_assign_proc : process(ap_CS_fsm_state4, ap_reg_ioackin_m_axi_dout_gmem_V_AWREADY)
    begin
        if (((ap_reg_ioackin_m_axi_dout_gmem_V_AWREADY = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_dout_gmem_V_AWVALID <= ap_const_logic_1;
        else 
            m_axi_dout_gmem_V_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_dout_gmem_V_BREADY_assign_proc : process(m_axi_dout_gmem_V_BVALID, ap_CS_fsm_state12)
    begin
        if (((m_axi_dout_gmem_V_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            m_axi_dout_gmem_V_BREADY <= ap_const_logic_1;
        else 
            m_axi_dout_gmem_V_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_dout_gmem_V_RREADY <= ap_const_logic_0;
    m_axi_dout_gmem_V_WDATA <= tmp_data_V_reg_470;
    m_axi_dout_gmem_V_WID <= ap_const_lv1_0;
    m_axi_dout_gmem_V_WLAST <= ap_const_logic_0;
    m_axi_dout_gmem_V_WSTRB <= ap_const_lv64_FFFFFFFFFFFFFFFF;
    m_axi_dout_gmem_V_WUSER <= ap_const_lv1_0;

    m_axi_dout_gmem_V_WVALID_assign_proc : process(ap_enable_reg_pp0_iter2, exitcond_i_i_i_i_i_reg_461_pp0_iter1_reg, ap_reg_ioackin_m_axi_dout_gmem_V_WREADY, ap_block_pp0_stage0_01001)
    begin
        if (((ap_reg_ioackin_m_axi_dout_gmem_V_WREADY = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (exitcond_i_i_i_i_i_reg_461_pp0_iter1_reg = ap_const_lv1_0))) then 
            m_axi_dout_gmem_V_WVALID <= ap_const_logic_1;
        else 
            m_axi_dout_gmem_V_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    not_i_i_i_i_i_fu_335_p2 <= (tmp_last_V_fu_174 xor ap_const_lv1_1);
    padded_word_stream_V0_status <= (padded_word_stream_V_empty_n and padded_word_stream_V_2_empty_n and padded_word_stream_V_1_empty_n);

    padded_word_stream_V0_update_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_i_i_i_i_i_reg_461, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (exitcond_i_i_i_i_i_reg_461 = ap_const_lv1_0))) then 
            padded_word_stream_V0_update <= ap_const_logic_1;
        else 
            padded_word_stream_V0_update <= ap_const_logic_0;
        end if; 
    end process;


    padded_word_stream_V_1_blk_n_assign_proc : process(padded_word_stream_V_1_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_i_i_i_i_i_reg_461)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_i_i_i_i_i_reg_461 = ap_const_lv1_0))) then 
            padded_word_stream_V_1_blk_n <= padded_word_stream_V_1_empty_n;
        else 
            padded_word_stream_V_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    padded_word_stream_V_1_read <= padded_word_stream_V0_update;

    padded_word_stream_V_2_blk_n_assign_proc : process(padded_word_stream_V_2_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_i_i_i_i_i_reg_461)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_i_i_i_i_i_reg_461 = ap_const_lv1_0))) then 
            padded_word_stream_V_2_blk_n <= padded_word_stream_V_2_empty_n;
        else 
            padded_word_stream_V_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    padded_word_stream_V_2_read <= padded_word_stream_V0_update;

    padded_word_stream_V_blk_n_assign_proc : process(padded_word_stream_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, exitcond_i_i_i_i_i_reg_461)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (exitcond_i_i_i_i_i_reg_461 = ap_const_lv1_0))) then 
            padded_word_stream_V_blk_n <= padded_word_stream_V_empty_n;
        else 
            padded_word_stream_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    padded_word_stream_V_read <= padded_word_stream_V0_update;
    sum_i_i_fu_364_p2 <= std_logic_vector(unsigned(dout_gmem_V_offset_c_reg_427) + unsigned(tmp_4_i_i_fu_359_p2));
    tmp_19_i_i_i_i_i_fu_264_p2 <= std_logic_vector(unsigned(write_mem_config_off_8_dout) + unsigned(tmp_i_i_fu_258_p2));
        tmp_20_cast_i_i_i_i_s_fu_310_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_20_i_i_i_i_i_fu_304_p2),54));

    tmp_20_i_i_i_i_i_fu_304_p2 <= std_logic_vector(unsigned(ap_const_lv53_1) - unsigned(first_block_cast_i_i_fu_298_p1));
    tmp_21_i_i_i_i_i_fu_330_p2 <= "1" when (unsigned(total_blocks_i_i_i_i_reg_222) < unsigned(write_blocks_cast_i_s_reg_432)) else "0";
    tmp_22_i_i_i_i_i_fu_341_p2 <= (tmp_21_i_i_i_i_i_fu_330_p2 and not_i_i_i_i_i_fu_335_p2);
    tmp_3_i_i_fu_324_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_i_i_reg_422),64));
    tmp_4_i_i_fu_359_p2 <= std_logic_vector(unsigned(tmp_3_i_i_reg_437) + unsigned(tmp_fu_353_p2));
    tmp_fu_353_p2 <= std_logic_vector(shift_left(unsigned(total_blocks_i_i_i_i_reg_222),to_integer(unsigned('0' & ap_const_lv64_6(31-1 downto 0)))));
    tmp_i_i_fu_258_p2 <= std_logic_vector(unsigned(write_mem_config_siz) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF));
    total_blocks_fu_347_p2 <= std_logic_vector(unsigned(total_blocks_i_i_i_i_reg_222) + unsigned(ap_const_lv64_1));
        write_blocks_cast_i_s_fu_320_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(write_blocks_fu_314_p2),64));

    write_blocks_fu_314_p2 <= std_logic_vector(signed(tmp_20_cast_i_i_i_i_s_fu_310_p1) + signed(last_block_cast_i_i_s_fu_301_p1));

    write_mem_config_off_6_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, write_mem_config_off_6_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            write_mem_config_off_6_blk_n <= write_mem_config_off_6_empty_n;
        else 
            write_mem_config_off_6_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    write_mem_config_off_6_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, write_mem_config_off_8_empty_n, dout_gmem_V_offset_empty_n, write_mem_config_off_6_empty_n)
    begin
        if ((not(((write_mem_config_off_8_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (write_mem_config_off_6_empty_n = ap_const_logic_0) or (dout_gmem_V_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            write_mem_config_off_6_read <= ap_const_logic_1;
        else 
            write_mem_config_off_6_read <= ap_const_logic_0;
        end if; 
    end process;


    write_mem_config_off_8_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, write_mem_config_off_8_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            write_mem_config_off_8_blk_n <= write_mem_config_off_8_empty_n;
        else 
            write_mem_config_off_8_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    write_mem_config_off_8_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, write_mem_config_off_8_empty_n, dout_gmem_V_offset_empty_n, write_mem_config_off_6_empty_n)
    begin
        if ((not(((write_mem_config_off_8_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (write_mem_config_off_6_empty_n = ap_const_logic_0) or (dout_gmem_V_offset_empty_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            write_mem_config_off_8_read <= ap_const_logic_1;
        else 
            write_mem_config_off_8_read <= ap_const_logic_0;
        end if; 
    end process;

end behav;
