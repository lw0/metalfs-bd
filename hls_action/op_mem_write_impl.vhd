-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity op_mem_write_impl is
port (
    axis_s_0_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    axis_s_0_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
    axis_s_0_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dout_gmem_V_AWVALID : OUT STD_LOGIC;
    m_axi_dout_gmem_V_AWREADY : IN STD_LOGIC;
    m_axi_dout_gmem_V_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_dout_gmem_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dout_gmem_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_dout_gmem_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dout_gmem_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dout_gmem_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dout_gmem_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dout_gmem_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dout_gmem_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dout_gmem_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dout_gmem_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dout_gmem_V_WVALID : OUT STD_LOGIC;
    m_axi_dout_gmem_V_WREADY : IN STD_LOGIC;
    m_axi_dout_gmem_V_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_dout_gmem_V_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_dout_gmem_V_WLAST : OUT STD_LOGIC;
    m_axi_dout_gmem_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dout_gmem_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dout_gmem_V_ARVALID : OUT STD_LOGIC;
    m_axi_dout_gmem_V_ARREADY : IN STD_LOGIC;
    m_axi_dout_gmem_V_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_dout_gmem_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dout_gmem_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_dout_gmem_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dout_gmem_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dout_gmem_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dout_gmem_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dout_gmem_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_dout_gmem_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dout_gmem_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_dout_gmem_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dout_gmem_V_RVALID : IN STD_LOGIC;
    m_axi_dout_gmem_V_RREADY : OUT STD_LOGIC;
    m_axi_dout_gmem_V_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_dout_gmem_V_RLAST : IN STD_LOGIC;
    m_axi_dout_gmem_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dout_gmem_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dout_gmem_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dout_gmem_V_BVALID : IN STD_LOGIC;
    m_axi_dout_gmem_V_BREADY : OUT STD_LOGIC;
    m_axi_dout_gmem_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_dout_gmem_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_dout_gmem_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    dout_gmem_V_offset : IN STD_LOGIC_VECTOR (57 downto 0);
    write_mem_config_off : IN STD_LOGIC_VECTOR (63 downto 0);
    write_mem_config_siz : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    dout_gmem_V_offset_ap_vld : IN STD_LOGIC;
    write_mem_config_off_ap_vld : IN STD_LOGIC;
    axis_s_0_TVALID : IN STD_LOGIC;
    axis_s_0_TREADY : OUT STD_LOGIC;
    write_mem_config_siz_ap_vld : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of op_mem_write_impl is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv512_lc_2 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";

    signal op_mem_write_impl_Bl_U0_ap_start : STD_LOGIC;
    signal op_mem_write_impl_Bl_U0_ap_done : STD_LOGIC;
    signal op_mem_write_impl_Bl_U0_ap_continue : STD_LOGIC;
    signal op_mem_write_impl_Bl_U0_ap_idle : STD_LOGIC;
    signal op_mem_write_impl_Bl_U0_ap_ready : STD_LOGIC;
    signal op_mem_write_impl_Bl_U0_start_out : STD_LOGIC;
    signal op_mem_write_impl_Bl_U0_start_write : STD_LOGIC;
    signal op_mem_write_impl_Bl_U0_write_mem_config_offset_load_out_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal op_mem_write_impl_Bl_U0_write_mem_config_offset_load_out_out_write : STD_LOGIC;
    signal op_mem_write_impl_Bl_U0_write_mem_config_offset_load_cast21_out_out_din : STD_LOGIC_VECTOR (11 downto 0);
    signal op_mem_write_impl_Bl_U0_write_mem_config_offset_load_cast21_out_out_write : STD_LOGIC;
    signal op_mem_write_impl_Bl_U0_write_mem_config_offset_out_din : STD_LOGIC_VECTOR (63 downto 0);
    signal op_mem_write_impl_Bl_U0_write_mem_config_offset_out_write : STD_LOGIC;
    signal op_mem_write_impl_Bl_U0_dout_gmem_V_offset_out_din : STD_LOGIC_VECTOR (57 downto 0);
    signal op_mem_write_impl_Bl_U0_dout_gmem_V_offset_out_write : STD_LOGIC;
    signal op_mem_write_impl_Bl_U0_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal op_mem_write_impl_Bl_U0_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal op_mem_write_impl_Bl_U0_ap_return_2 : STD_LOGIC_VECTOR (63 downto 0);
    signal op_mem_write_impl_Bl_U0_ap_return_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal op_mem_write_impl_Bl_U0_ap_return_4 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_channel_done_tmp_4_loc_channel : STD_LOGIC;
    signal tmp_4_loc_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_tmp_4_loc_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_tmp_4_loc_channel : STD_LOGIC;
    signal ap_channel_done_op2_assign_3_cast18_s : STD_LOGIC;
    signal op2_assign_3_cast18_s_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_op2_assign_3_cast18_s : STD_LOGIC := '0';
    signal ap_sync_channel_write_op2_assign_3_cast18_s : STD_LOGIC;
    signal ap_channel_done_tmp_3_loc_channel : STD_LOGIC;
    signal tmp_3_loc_channel_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_tmp_3_loc_channel : STD_LOGIC := '0';
    signal ap_sync_channel_write_tmp_3_loc_channel : STD_LOGIC;
    signal ap_channel_done_insert_padding_eleme : STD_LOGIC;
    signal insert_padding_eleme_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_insert_padding_eleme : STD_LOGIC := '0';
    signal ap_sync_channel_write_insert_padding_eleme : STD_LOGIC;
    signal ap_channel_done_tmp_2_cast20_loc_cha : STD_LOGIC;
    signal tmp_2_cast20_loc_cha_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_tmp_2_cast20_loc_cha : STD_LOGIC := '0';
    signal ap_sync_channel_write_tmp_2_cast20_loc_cha : STD_LOGIC;
    signal op_mem_write_impl_Lo_2_U0_ap_start : STD_LOGIC;
    signal op_mem_write_impl_Lo_2_U0_ap_done : STD_LOGIC;
    signal op_mem_write_impl_Lo_2_U0_ap_continue : STD_LOGIC;
    signal op_mem_write_impl_Lo_2_U0_ap_idle : STD_LOGIC;
    signal op_mem_write_impl_Lo_2_U0_ap_ready : STD_LOGIC;
    signal op_mem_write_impl_Lo_2_U0_start_out : STD_LOGIC;
    signal op_mem_write_impl_Lo_2_U0_start_write : STD_LOGIC;
    signal op_mem_write_impl_Lo_2_U0_aligned_stream_V_data_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal op_mem_write_impl_Lo_2_U0_aligned_stream_V_data_V_write : STD_LOGIC;
    signal op_mem_write_impl_Lo_2_U0_aligned_stream_V_strb_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal op_mem_write_impl_Lo_2_U0_aligned_stream_V_strb_V_write : STD_LOGIC;
    signal op_mem_write_impl_Lo_2_U0_aligned_stream_V_last_V_din : STD_LOGIC_VECTOR (0 downto 0);
    signal op_mem_write_impl_Lo_2_U0_aligned_stream_V_last_V_write : STD_LOGIC;
    signal op_mem_write_impl_Lo_2_U0_axis_s_0_TREADY : STD_LOGIC;
    signal op_mem_write_impl_Lo_1_U0_ap_start : STD_LOGIC;
    signal op_mem_write_impl_Lo_1_U0_ap_done : STD_LOGIC;
    signal op_mem_write_impl_Lo_1_U0_ap_continue : STD_LOGIC;
    signal op_mem_write_impl_Lo_1_U0_ap_idle : STD_LOGIC;
    signal op_mem_write_impl_Lo_1_U0_ap_ready : STD_LOGIC;
    signal op_mem_write_impl_Lo_1_U0_aligned_stream_V_data_V_read : STD_LOGIC;
    signal op_mem_write_impl_Lo_1_U0_aligned_stream_V_strb_V_read : STD_LOGIC;
    signal op_mem_write_impl_Lo_1_U0_aligned_stream_V_last_V_read : STD_LOGIC;
    signal op_mem_write_impl_Lo_1_U0_word_stream_V_data_V_din : STD_LOGIC_VECTOR (511 downto 0);
    signal op_mem_write_impl_Lo_1_U0_word_stream_V_data_V_write : STD_LOGIC;
    signal op_mem_write_impl_Lo_1_U0_word_stream_V_strb_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal op_mem_write_impl_Lo_1_U0_word_stream_V_strb_V_write : STD_LOGIC;
    signal op_mem_write_impl_Lo_1_U0_word_stream_V_last_V_din : STD_LOGIC_VECTOR (0 downto 0);
    signal op_mem_write_impl_Lo_1_U0_word_stream_V_last_V_write : STD_LOGIC;
    signal op_mem_write_impl_Lo_3_U0_ap_start : STD_LOGIC;
    signal op_mem_write_impl_Lo_3_U0_ap_done : STD_LOGIC;
    signal op_mem_write_impl_Lo_3_U0_ap_continue : STD_LOGIC;
    signal op_mem_write_impl_Lo_3_U0_ap_idle : STD_LOGIC;
    signal op_mem_write_impl_Lo_3_U0_ap_ready : STD_LOGIC;
    signal op_mem_write_impl_Lo_3_U0_write_mem_config_offset_load_cast21_loc_read : STD_LOGIC;
    signal op_mem_write_impl_Lo_3_U0_padded_word_stream_V_data_V_din : STD_LOGIC_VECTOR (511 downto 0);
    signal op_mem_write_impl_Lo_3_U0_padded_word_stream_V_data_V_write : STD_LOGIC;
    signal op_mem_write_impl_Lo_3_U0_padded_word_stream_V_strb_V_din : STD_LOGIC_VECTOR (63 downto 0);
    signal op_mem_write_impl_Lo_3_U0_padded_word_stream_V_strb_V_write : STD_LOGIC;
    signal op_mem_write_impl_Lo_3_U0_padded_word_stream_V_last_V_din : STD_LOGIC_VECTOR (0 downto 0);
    signal op_mem_write_impl_Lo_3_U0_padded_word_stream_V_last_V_write : STD_LOGIC;
    signal op_mem_write_impl_Lo_3_U0_word_stream_V_data_V_read : STD_LOGIC;
    signal op_mem_write_impl_Lo_3_U0_word_stream_V_strb_V_read : STD_LOGIC;
    signal op_mem_write_impl_Lo_3_U0_word_stream_V_last_V_read : STD_LOGIC;
    signal op_mem_write_impl_Lo_U0_ap_start : STD_LOGIC;
    signal op_mem_write_impl_Lo_U0_ap_done : STD_LOGIC;
    signal op_mem_write_impl_Lo_U0_ap_continue : STD_LOGIC;
    signal op_mem_write_impl_Lo_U0_ap_idle : STD_LOGIC;
    signal op_mem_write_impl_Lo_U0_ap_ready : STD_LOGIC;
    signal op_mem_write_impl_Lo_U0_write_mem_config_off_8_read : STD_LOGIC;
    signal op_mem_write_impl_Lo_U0_padded_word_stream_V_read : STD_LOGIC;
    signal op_mem_write_impl_Lo_U0_padded_word_stream_V_1_read : STD_LOGIC;
    signal op_mem_write_impl_Lo_U0_padded_word_stream_V_2_read : STD_LOGIC;
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWVALID : STD_LOGIC;
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_WVALID : STD_LOGIC;
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_WLAST : STD_LOGIC;
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARVALID : STD_LOGIC;
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_RREADY : STD_LOGIC;
    signal op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_BREADY : STD_LOGIC;
    signal op_mem_write_impl_Lo_U0_dout_gmem_V_offset_read : STD_LOGIC;
    signal op_mem_write_impl_Lo_U0_write_mem_config_off_6_read : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal write_mem_config_off_8_full_n : STD_LOGIC;
    signal write_mem_config_off_8_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal write_mem_config_off_8_empty_n : STD_LOGIC;
    signal write_mem_config_off_7_full_n : STD_LOGIC;
    signal write_mem_config_off_7_dout : STD_LOGIC_VECTOR (11 downto 0);
    signal write_mem_config_off_7_empty_n : STD_LOGIC;
    signal write_mem_config_off_6_full_n : STD_LOGIC;
    signal write_mem_config_off_6_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal write_mem_config_off_6_empty_n : STD_LOGIC;
    signal dout_gmem_V_offset_c_full_n : STD_LOGIC;
    signal dout_gmem_V_offset_c_dout : STD_LOGIC_VECTOR (57 downto 0);
    signal dout_gmem_V_offset_c_empty_n : STD_LOGIC;
    signal tmp_2_cast20_loc_cha_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_cast20_loc_cha_empty_n : STD_LOGIC;
    signal insert_padding_eleme_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal insert_padding_eleme_empty_n : STD_LOGIC;
    signal tmp_3_loc_channel_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_3_loc_channel_empty_n : STD_LOGIC;
    signal op2_assign_3_cast18_s_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal op2_assign_3_cast18_s_empty_n : STD_LOGIC;
    signal tmp_4_loc_channel_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_4_loc_channel_empty_n : STD_LOGIC;
    signal aligned_stream_V_dat_full_n : STD_LOGIC;
    signal aligned_stream_V_dat_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal aligned_stream_V_dat_empty_n : STD_LOGIC;
    signal aligned_stream_V_str_full_n : STD_LOGIC;
    signal aligned_stream_V_str_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal aligned_stream_V_str_empty_n : STD_LOGIC;
    signal aligned_stream_V_las_full_n : STD_LOGIC;
    signal aligned_stream_V_las_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal aligned_stream_V_las_empty_n : STD_LOGIC;
    signal word_stream_V_data_V_full_n : STD_LOGIC;
    signal word_stream_V_data_V_dout : STD_LOGIC_VECTOR (511 downto 0);
    signal word_stream_V_data_V_empty_n : STD_LOGIC;
    signal word_stream_V_strb_V_full_n : STD_LOGIC;
    signal word_stream_V_strb_V_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal word_stream_V_strb_V_empty_n : STD_LOGIC;
    signal word_stream_V_last_V_full_n : STD_LOGIC;
    signal word_stream_V_last_V_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal word_stream_V_last_V_empty_n : STD_LOGIC;
    signal padded_word_stream_V_full_n : STD_LOGIC;
    signal padded_word_stream_V_dout : STD_LOGIC_VECTOR (511 downto 0);
    signal padded_word_stream_V_empty_n : STD_LOGIC;
    signal padded_word_stream_V_1_full_n : STD_LOGIC;
    signal padded_word_stream_V_1_dout : STD_LOGIC_VECTOR (63 downto 0);
    signal padded_word_stream_V_1_empty_n : STD_LOGIC;
    signal padded_word_stream_V_2_full_n : STD_LOGIC;
    signal padded_word_stream_V_2_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal padded_word_stream_V_2_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal ap_sync_reg_op_mem_write_impl_Lo_2_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_op_mem_write_impl_Lo_2_U0_ap_ready : STD_LOGIC;
    signal op_mem_write_impl_Lo_2_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_op_mem_write_impl_Bl_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_op_mem_write_impl_Bl_U0_ap_ready : STD_LOGIC;
    signal op_mem_write_impl_Bl_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal ap_sync_reg_op_mem_write_impl_Lo_U0_ap_ready : STD_LOGIC := '0';
    signal ap_sync_op_mem_write_impl_Lo_U0_ap_ready : STD_LOGIC;
    signal op_mem_write_impl_Lo_U0_ap_ready_count : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal start_for_op_mem_write_impl_Lo_3_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_op_mem_write_impl_Lo_3_U0_full_n : STD_LOGIC;
    signal start_for_op_mem_write_impl_Lo_3_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_op_mem_write_impl_Lo_3_U0_empty_n : STD_LOGIC;
    signal start_for_op_mem_write_impl_Lo_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_op_mem_write_impl_Lo_1_U0_full_n : STD_LOGIC;
    signal start_for_op_mem_write_impl_Lo_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_op_mem_write_impl_Lo_1_U0_empty_n : STD_LOGIC;
    signal op_mem_write_impl_Lo_1_U0_start_full_n : STD_LOGIC;
    signal op_mem_write_impl_Lo_1_U0_start_write : STD_LOGIC;
    signal op_mem_write_impl_Lo_3_U0_start_full_n : STD_LOGIC;
    signal op_mem_write_impl_Lo_3_U0_start_write : STD_LOGIC;
    signal op_mem_write_impl_Lo_U0_start_full_n : STD_LOGIC;
    signal op_mem_write_impl_Lo_U0_start_write : STD_LOGIC;

    component op_mem_write_impl_Bl IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        write_mem_config_offset_load_out_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        write_mem_config_offset_load_out_out_full_n : IN STD_LOGIC;
        write_mem_config_offset_load_out_out_write : OUT STD_LOGIC;
        write_mem_config_offset_load_cast21_out_out_din : OUT STD_LOGIC_VECTOR (11 downto 0);
        write_mem_config_offset_load_cast21_out_out_full_n : IN STD_LOGIC;
        write_mem_config_offset_load_cast21_out_out_write : OUT STD_LOGIC;
        write_mem_config_offset_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        write_mem_config_offset_out_full_n : IN STD_LOGIC;
        write_mem_config_offset_out_write : OUT STD_LOGIC;
        dout_gmem_V_offset : IN STD_LOGIC_VECTOR (57 downto 0);
        dout_gmem_V_offset_out_din : OUT STD_LOGIC_VECTOR (57 downto 0);
        dout_gmem_V_offset_out_full_n : IN STD_LOGIC;
        dout_gmem_V_offset_out_write : OUT STD_LOGIC;
        write_mem_config_off : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component op_mem_write_impl_Lo_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (7 downto 0);
        aligned_stream_V_data_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        aligned_stream_V_data_V_full_n : IN STD_LOGIC;
        aligned_stream_V_data_V_write : OUT STD_LOGIC;
        aligned_stream_V_strb_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        aligned_stream_V_strb_V_full_n : IN STD_LOGIC;
        aligned_stream_V_strb_V_write : OUT STD_LOGIC;
        aligned_stream_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        aligned_stream_V_last_V_full_n : IN STD_LOGIC;
        aligned_stream_V_last_V_write : OUT STD_LOGIC;
        p_read1 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (7 downto 0);
        axis_s_0_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
        axis_s_0_TVALID : IN STD_LOGIC;
        axis_s_0_TREADY : OUT STD_LOGIC;
        axis_s_0_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
        axis_s_0_TLAST : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component op_mem_write_impl_Lo_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        aligned_stream_V_data_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        aligned_stream_V_data_V_empty_n : IN STD_LOGIC;
        aligned_stream_V_data_V_read : OUT STD_LOGIC;
        aligned_stream_V_strb_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        aligned_stream_V_strb_V_empty_n : IN STD_LOGIC;
        aligned_stream_V_strb_V_read : OUT STD_LOGIC;
        aligned_stream_V_last_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        aligned_stream_V_last_V_empty_n : IN STD_LOGIC;
        aligned_stream_V_last_V_read : OUT STD_LOGIC;
        word_stream_V_data_V_din : OUT STD_LOGIC_VECTOR (511 downto 0);
        word_stream_V_data_V_full_n : IN STD_LOGIC;
        word_stream_V_data_V_write : OUT STD_LOGIC;
        word_stream_V_strb_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        word_stream_V_strb_V_full_n : IN STD_LOGIC;
        word_stream_V_strb_V_write : OUT STD_LOGIC;
        word_stream_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        word_stream_V_last_V_full_n : IN STD_LOGIC;
        word_stream_V_last_V_write : OUT STD_LOGIC );
    end component;


    component op_mem_write_impl_Lo_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        write_mem_config_offset_load_cast21_loc_dout : IN STD_LOGIC_VECTOR (11 downto 0);
        write_mem_config_offset_load_cast21_loc_empty_n : IN STD_LOGIC;
        write_mem_config_offset_load_cast21_loc_read : OUT STD_LOGIC;
        padded_word_stream_V_data_V_din : OUT STD_LOGIC_VECTOR (511 downto 0);
        padded_word_stream_V_data_V_full_n : IN STD_LOGIC;
        padded_word_stream_V_data_V_write : OUT STD_LOGIC;
        padded_word_stream_V_strb_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
        padded_word_stream_V_strb_V_full_n : IN STD_LOGIC;
        padded_word_stream_V_strb_V_write : OUT STD_LOGIC;
        padded_word_stream_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
        padded_word_stream_V_last_V_full_n : IN STD_LOGIC;
        padded_word_stream_V_last_V_write : OUT STD_LOGIC;
        word_stream_V_data_V_dout : IN STD_LOGIC_VECTOR (511 downto 0);
        word_stream_V_data_V_empty_n : IN STD_LOGIC;
        word_stream_V_data_V_read : OUT STD_LOGIC;
        word_stream_V_strb_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        word_stream_V_strb_V_empty_n : IN STD_LOGIC;
        word_stream_V_strb_V_read : OUT STD_LOGIC;
        word_stream_V_last_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        word_stream_V_last_V_empty_n : IN STD_LOGIC;
        word_stream_V_last_V_read : OUT STD_LOGIC );
    end component;


    component op_mem_write_impl_Lo IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        write_mem_config_off_8_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        write_mem_config_off_8_empty_n : IN STD_LOGIC;
        write_mem_config_off_8_read : OUT STD_LOGIC;
        padded_word_stream_V_dout : IN STD_LOGIC_VECTOR (511 downto 0);
        padded_word_stream_V_empty_n : IN STD_LOGIC;
        padded_word_stream_V_read : OUT STD_LOGIC;
        padded_word_stream_V_1_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        padded_word_stream_V_1_empty_n : IN STD_LOGIC;
        padded_word_stream_V_1_read : OUT STD_LOGIC;
        padded_word_stream_V_2_dout : IN STD_LOGIC_VECTOR (0 downto 0);
        padded_word_stream_V_2_empty_n : IN STD_LOGIC;
        padded_word_stream_V_2_read : OUT STD_LOGIC;
        m_axi_dout_gmem_V_AWVALID : OUT STD_LOGIC;
        m_axi_dout_gmem_V_AWREADY : IN STD_LOGIC;
        m_axi_dout_gmem_V_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_dout_gmem_V_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dout_gmem_V_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_dout_gmem_V_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_dout_gmem_V_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dout_gmem_V_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dout_gmem_V_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dout_gmem_V_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_dout_gmem_V_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dout_gmem_V_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dout_gmem_V_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dout_gmem_V_WVALID : OUT STD_LOGIC;
        m_axi_dout_gmem_V_WREADY : IN STD_LOGIC;
        m_axi_dout_gmem_V_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_dout_gmem_V_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_dout_gmem_V_WLAST : OUT STD_LOGIC;
        m_axi_dout_gmem_V_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dout_gmem_V_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dout_gmem_V_ARVALID : OUT STD_LOGIC;
        m_axi_dout_gmem_V_ARREADY : IN STD_LOGIC;
        m_axi_dout_gmem_V_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_dout_gmem_V_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dout_gmem_V_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_dout_gmem_V_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_dout_gmem_V_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dout_gmem_V_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dout_gmem_V_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dout_gmem_V_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_dout_gmem_V_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dout_gmem_V_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_dout_gmem_V_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dout_gmem_V_RVALID : IN STD_LOGIC;
        m_axi_dout_gmem_V_RREADY : OUT STD_LOGIC;
        m_axi_dout_gmem_V_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_dout_gmem_V_RLAST : IN STD_LOGIC;
        m_axi_dout_gmem_V_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dout_gmem_V_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dout_gmem_V_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dout_gmem_V_BVALID : IN STD_LOGIC;
        m_axi_dout_gmem_V_BREADY : OUT STD_LOGIC;
        m_axi_dout_gmem_V_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_dout_gmem_V_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_dout_gmem_V_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        dout_gmem_V_offset_dout : IN STD_LOGIC_VECTOR (57 downto 0);
        dout_gmem_V_offset_empty_n : IN STD_LOGIC;
        dout_gmem_V_offset_read : OUT STD_LOGIC;
        write_mem_config_off_6_dout : IN STD_LOGIC_VECTOR (63 downto 0);
        write_mem_config_off_6_empty_n : IN STD_LOGIC;
        write_mem_config_off_6_read : OUT STD_LOGIC;
        write_mem_config_siz : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component fifo_w64_d5_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w12_d4_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (11 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (11 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w58_d5_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (57 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (57 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w8_d2_A_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w64_d2_A_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (63 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (63 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w1_d2_A_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w512_d2_A_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (511 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (511 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_op_mem_g8j IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_op_mem_hbi IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    op_mem_write_impl_Bl_U0 : component op_mem_write_impl_Bl
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => op_mem_write_impl_Bl_U0_ap_start,
        start_full_n => start_for_op_mem_write_impl_Lo_3_U0_full_n,
        ap_done => op_mem_write_impl_Bl_U0_ap_done,
        ap_continue => op_mem_write_impl_Bl_U0_ap_continue,
        ap_idle => op_mem_write_impl_Bl_U0_ap_idle,
        ap_ready => op_mem_write_impl_Bl_U0_ap_ready,
        start_out => op_mem_write_impl_Bl_U0_start_out,
        start_write => op_mem_write_impl_Bl_U0_start_write,
        write_mem_config_offset_load_out_out_din => op_mem_write_impl_Bl_U0_write_mem_config_offset_load_out_out_din,
        write_mem_config_offset_load_out_out_full_n => write_mem_config_off_8_full_n,
        write_mem_config_offset_load_out_out_write => op_mem_write_impl_Bl_U0_write_mem_config_offset_load_out_out_write,
        write_mem_config_offset_load_cast21_out_out_din => op_mem_write_impl_Bl_U0_write_mem_config_offset_load_cast21_out_out_din,
        write_mem_config_offset_load_cast21_out_out_full_n => write_mem_config_off_7_full_n,
        write_mem_config_offset_load_cast21_out_out_write => op_mem_write_impl_Bl_U0_write_mem_config_offset_load_cast21_out_out_write,
        write_mem_config_offset_out_din => op_mem_write_impl_Bl_U0_write_mem_config_offset_out_din,
        write_mem_config_offset_out_full_n => write_mem_config_off_6_full_n,
        write_mem_config_offset_out_write => op_mem_write_impl_Bl_U0_write_mem_config_offset_out_write,
        dout_gmem_V_offset => dout_gmem_V_offset,
        dout_gmem_V_offset_out_din => op_mem_write_impl_Bl_U0_dout_gmem_V_offset_out_din,
        dout_gmem_V_offset_out_full_n => dout_gmem_V_offset_c_full_n,
        dout_gmem_V_offset_out_write => op_mem_write_impl_Bl_U0_dout_gmem_V_offset_out_write,
        write_mem_config_off => write_mem_config_off,
        ap_return_0 => op_mem_write_impl_Bl_U0_ap_return_0,
        ap_return_1 => op_mem_write_impl_Bl_U0_ap_return_1,
        ap_return_2 => op_mem_write_impl_Bl_U0_ap_return_2,
        ap_return_3 => op_mem_write_impl_Bl_U0_ap_return_3,
        ap_return_4 => op_mem_write_impl_Bl_U0_ap_return_4);

    op_mem_write_impl_Lo_2_U0 : component op_mem_write_impl_Lo_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => op_mem_write_impl_Lo_2_U0_ap_start,
        start_full_n => start_for_op_mem_write_impl_Lo_1_U0_full_n,
        ap_done => op_mem_write_impl_Lo_2_U0_ap_done,
        ap_continue => op_mem_write_impl_Lo_2_U0_ap_continue,
        ap_idle => op_mem_write_impl_Lo_2_U0_ap_idle,
        ap_ready => op_mem_write_impl_Lo_2_U0_ap_ready,
        start_out => op_mem_write_impl_Lo_2_U0_start_out,
        start_write => op_mem_write_impl_Lo_2_U0_start_write,
        p_read => insert_padding_eleme_dout,
        aligned_stream_V_data_V_din => op_mem_write_impl_Lo_2_U0_aligned_stream_V_data_V_din,
        aligned_stream_V_data_V_full_n => aligned_stream_V_dat_full_n,
        aligned_stream_V_data_V_write => op_mem_write_impl_Lo_2_U0_aligned_stream_V_data_V_write,
        aligned_stream_V_strb_V_din => op_mem_write_impl_Lo_2_U0_aligned_stream_V_strb_V_din,
        aligned_stream_V_strb_V_full_n => aligned_stream_V_str_full_n,
        aligned_stream_V_strb_V_write => op_mem_write_impl_Lo_2_U0_aligned_stream_V_strb_V_write,
        aligned_stream_V_last_V_din => op_mem_write_impl_Lo_2_U0_aligned_stream_V_last_V_din,
        aligned_stream_V_last_V_full_n => aligned_stream_V_las_full_n,
        aligned_stream_V_last_V_write => op_mem_write_impl_Lo_2_U0_aligned_stream_V_last_V_write,
        p_read1 => tmp_3_loc_channel_dout,
        p_read2 => tmp_2_cast20_loc_cha_dout,
        p_read3 => tmp_4_loc_channel_dout,
        p_read4 => op2_assign_3_cast18_s_dout,
        axis_s_0_TDATA => axis_s_0_TDATA,
        axis_s_0_TVALID => axis_s_0_TVALID,
        axis_s_0_TREADY => op_mem_write_impl_Lo_2_U0_axis_s_0_TREADY,
        axis_s_0_TSTRB => axis_s_0_TSTRB,
        axis_s_0_TLAST => axis_s_0_TLAST);

    op_mem_write_impl_Lo_1_U0 : component op_mem_write_impl_Lo_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => op_mem_write_impl_Lo_1_U0_ap_start,
        ap_done => op_mem_write_impl_Lo_1_U0_ap_done,
        ap_continue => op_mem_write_impl_Lo_1_U0_ap_continue,
        ap_idle => op_mem_write_impl_Lo_1_U0_ap_idle,
        ap_ready => op_mem_write_impl_Lo_1_U0_ap_ready,
        aligned_stream_V_data_V_dout => aligned_stream_V_dat_dout,
        aligned_stream_V_data_V_empty_n => aligned_stream_V_dat_empty_n,
        aligned_stream_V_data_V_read => op_mem_write_impl_Lo_1_U0_aligned_stream_V_data_V_read,
        aligned_stream_V_strb_V_dout => aligned_stream_V_str_dout,
        aligned_stream_V_strb_V_empty_n => aligned_stream_V_str_empty_n,
        aligned_stream_V_strb_V_read => op_mem_write_impl_Lo_1_U0_aligned_stream_V_strb_V_read,
        aligned_stream_V_last_V_dout => aligned_stream_V_las_dout,
        aligned_stream_V_last_V_empty_n => aligned_stream_V_las_empty_n,
        aligned_stream_V_last_V_read => op_mem_write_impl_Lo_1_U0_aligned_stream_V_last_V_read,
        word_stream_V_data_V_din => op_mem_write_impl_Lo_1_U0_word_stream_V_data_V_din,
        word_stream_V_data_V_full_n => word_stream_V_data_V_full_n,
        word_stream_V_data_V_write => op_mem_write_impl_Lo_1_U0_word_stream_V_data_V_write,
        word_stream_V_strb_V_din => op_mem_write_impl_Lo_1_U0_word_stream_V_strb_V_din,
        word_stream_V_strb_V_full_n => word_stream_V_strb_V_full_n,
        word_stream_V_strb_V_write => op_mem_write_impl_Lo_1_U0_word_stream_V_strb_V_write,
        word_stream_V_last_V_din => op_mem_write_impl_Lo_1_U0_word_stream_V_last_V_din,
        word_stream_V_last_V_full_n => word_stream_V_last_V_full_n,
        word_stream_V_last_V_write => op_mem_write_impl_Lo_1_U0_word_stream_V_last_V_write);

    op_mem_write_impl_Lo_3_U0 : component op_mem_write_impl_Lo_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => op_mem_write_impl_Lo_3_U0_ap_start,
        ap_done => op_mem_write_impl_Lo_3_U0_ap_done,
        ap_continue => op_mem_write_impl_Lo_3_U0_ap_continue,
        ap_idle => op_mem_write_impl_Lo_3_U0_ap_idle,
        ap_ready => op_mem_write_impl_Lo_3_U0_ap_ready,
        write_mem_config_offset_load_cast21_loc_dout => write_mem_config_off_7_dout,
        write_mem_config_offset_load_cast21_loc_empty_n => write_mem_config_off_7_empty_n,
        write_mem_config_offset_load_cast21_loc_read => op_mem_write_impl_Lo_3_U0_write_mem_config_offset_load_cast21_loc_read,
        padded_word_stream_V_data_V_din => op_mem_write_impl_Lo_3_U0_padded_word_stream_V_data_V_din,
        padded_word_stream_V_data_V_full_n => padded_word_stream_V_full_n,
        padded_word_stream_V_data_V_write => op_mem_write_impl_Lo_3_U0_padded_word_stream_V_data_V_write,
        padded_word_stream_V_strb_V_din => op_mem_write_impl_Lo_3_U0_padded_word_stream_V_strb_V_din,
        padded_word_stream_V_strb_V_full_n => padded_word_stream_V_1_full_n,
        padded_word_stream_V_strb_V_write => op_mem_write_impl_Lo_3_U0_padded_word_stream_V_strb_V_write,
        padded_word_stream_V_last_V_din => op_mem_write_impl_Lo_3_U0_padded_word_stream_V_last_V_din,
        padded_word_stream_V_last_V_full_n => padded_word_stream_V_2_full_n,
        padded_word_stream_V_last_V_write => op_mem_write_impl_Lo_3_U0_padded_word_stream_V_last_V_write,
        word_stream_V_data_V_dout => word_stream_V_data_V_dout,
        word_stream_V_data_V_empty_n => word_stream_V_data_V_empty_n,
        word_stream_V_data_V_read => op_mem_write_impl_Lo_3_U0_word_stream_V_data_V_read,
        word_stream_V_strb_V_dout => word_stream_V_strb_V_dout,
        word_stream_V_strb_V_empty_n => word_stream_V_strb_V_empty_n,
        word_stream_V_strb_V_read => op_mem_write_impl_Lo_3_U0_word_stream_V_strb_V_read,
        word_stream_V_last_V_dout => word_stream_V_last_V_dout,
        word_stream_V_last_V_empty_n => word_stream_V_last_V_empty_n,
        word_stream_V_last_V_read => op_mem_write_impl_Lo_3_U0_word_stream_V_last_V_read);

    op_mem_write_impl_Lo_U0 : component op_mem_write_impl_Lo
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => op_mem_write_impl_Lo_U0_ap_start,
        ap_done => op_mem_write_impl_Lo_U0_ap_done,
        ap_continue => op_mem_write_impl_Lo_U0_ap_continue,
        ap_idle => op_mem_write_impl_Lo_U0_ap_idle,
        ap_ready => op_mem_write_impl_Lo_U0_ap_ready,
        write_mem_config_off_8_dout => write_mem_config_off_8_dout,
        write_mem_config_off_8_empty_n => write_mem_config_off_8_empty_n,
        write_mem_config_off_8_read => op_mem_write_impl_Lo_U0_write_mem_config_off_8_read,
        padded_word_stream_V_dout => padded_word_stream_V_dout,
        padded_word_stream_V_empty_n => padded_word_stream_V_empty_n,
        padded_word_stream_V_read => op_mem_write_impl_Lo_U0_padded_word_stream_V_read,
        padded_word_stream_V_1_dout => padded_word_stream_V_1_dout,
        padded_word_stream_V_1_empty_n => padded_word_stream_V_1_empty_n,
        padded_word_stream_V_1_read => op_mem_write_impl_Lo_U0_padded_word_stream_V_1_read,
        padded_word_stream_V_2_dout => padded_word_stream_V_2_dout,
        padded_word_stream_V_2_empty_n => padded_word_stream_V_2_empty_n,
        padded_word_stream_V_2_read => op_mem_write_impl_Lo_U0_padded_word_stream_V_2_read,
        m_axi_dout_gmem_V_AWVALID => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWVALID,
        m_axi_dout_gmem_V_AWREADY => m_axi_dout_gmem_V_AWREADY,
        m_axi_dout_gmem_V_AWADDR => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWADDR,
        m_axi_dout_gmem_V_AWID => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWID,
        m_axi_dout_gmem_V_AWLEN => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWLEN,
        m_axi_dout_gmem_V_AWSIZE => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWSIZE,
        m_axi_dout_gmem_V_AWBURST => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWBURST,
        m_axi_dout_gmem_V_AWLOCK => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWLOCK,
        m_axi_dout_gmem_V_AWCACHE => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWCACHE,
        m_axi_dout_gmem_V_AWPROT => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWPROT,
        m_axi_dout_gmem_V_AWQOS => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWQOS,
        m_axi_dout_gmem_V_AWREGION => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWREGION,
        m_axi_dout_gmem_V_AWUSER => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWUSER,
        m_axi_dout_gmem_V_WVALID => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_WVALID,
        m_axi_dout_gmem_V_WREADY => m_axi_dout_gmem_V_WREADY,
        m_axi_dout_gmem_V_WDATA => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_WDATA,
        m_axi_dout_gmem_V_WSTRB => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_WSTRB,
        m_axi_dout_gmem_V_WLAST => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_WLAST,
        m_axi_dout_gmem_V_WID => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_WID,
        m_axi_dout_gmem_V_WUSER => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_WUSER,
        m_axi_dout_gmem_V_ARVALID => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARVALID,
        m_axi_dout_gmem_V_ARREADY => ap_const_logic_0,
        m_axi_dout_gmem_V_ARADDR => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARADDR,
        m_axi_dout_gmem_V_ARID => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARID,
        m_axi_dout_gmem_V_ARLEN => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARLEN,
        m_axi_dout_gmem_V_ARSIZE => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARSIZE,
        m_axi_dout_gmem_V_ARBURST => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARBURST,
        m_axi_dout_gmem_V_ARLOCK => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARLOCK,
        m_axi_dout_gmem_V_ARCACHE => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARCACHE,
        m_axi_dout_gmem_V_ARPROT => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARPROT,
        m_axi_dout_gmem_V_ARQOS => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARQOS,
        m_axi_dout_gmem_V_ARREGION => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARREGION,
        m_axi_dout_gmem_V_ARUSER => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_ARUSER,
        m_axi_dout_gmem_V_RVALID => ap_const_logic_0,
        m_axi_dout_gmem_V_RREADY => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_RREADY,
        m_axi_dout_gmem_V_RDATA => ap_const_lv512_lc_1,
        m_axi_dout_gmem_V_RLAST => ap_const_logic_0,
        m_axi_dout_gmem_V_RID => ap_const_lv1_0,
        m_axi_dout_gmem_V_RUSER => ap_const_lv1_0,
        m_axi_dout_gmem_V_RRESP => ap_const_lv2_0,
        m_axi_dout_gmem_V_BVALID => m_axi_dout_gmem_V_BVALID,
        m_axi_dout_gmem_V_BREADY => op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_BREADY,
        m_axi_dout_gmem_V_BRESP => m_axi_dout_gmem_V_BRESP,
        m_axi_dout_gmem_V_BID => m_axi_dout_gmem_V_BID,
        m_axi_dout_gmem_V_BUSER => m_axi_dout_gmem_V_BUSER,
        dout_gmem_V_offset_dout => dout_gmem_V_offset_c_dout,
        dout_gmem_V_offset_empty_n => dout_gmem_V_offset_c_empty_n,
        dout_gmem_V_offset_read => op_mem_write_impl_Lo_U0_dout_gmem_V_offset_read,
        write_mem_config_off_6_dout => write_mem_config_off_6_dout,
        write_mem_config_off_6_empty_n => write_mem_config_off_6_empty_n,
        write_mem_config_off_6_read => op_mem_write_impl_Lo_U0_write_mem_config_off_6_read,
        write_mem_config_siz => write_mem_config_siz);

    write_mem_config_off_8_U : component fifo_w64_d5_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => op_mem_write_impl_Bl_U0_write_mem_config_offset_load_out_out_din,
        if_full_n => write_mem_config_off_8_full_n,
        if_write => op_mem_write_impl_Bl_U0_write_mem_config_offset_load_out_out_write,
        if_dout => write_mem_config_off_8_dout,
        if_empty_n => write_mem_config_off_8_empty_n,
        if_read => op_mem_write_impl_Lo_U0_write_mem_config_off_8_read);

    write_mem_config_off_7_U : component fifo_w12_d4_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => op_mem_write_impl_Bl_U0_write_mem_config_offset_load_cast21_out_out_din,
        if_full_n => write_mem_config_off_7_full_n,
        if_write => op_mem_write_impl_Bl_U0_write_mem_config_offset_load_cast21_out_out_write,
        if_dout => write_mem_config_off_7_dout,
        if_empty_n => write_mem_config_off_7_empty_n,
        if_read => op_mem_write_impl_Lo_3_U0_write_mem_config_offset_load_cast21_loc_read);

    write_mem_config_off_6_U : component fifo_w64_d5_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => op_mem_write_impl_Bl_U0_write_mem_config_offset_out_din,
        if_full_n => write_mem_config_off_6_full_n,
        if_write => op_mem_write_impl_Bl_U0_write_mem_config_offset_out_write,
        if_dout => write_mem_config_off_6_dout,
        if_empty_n => write_mem_config_off_6_empty_n,
        if_read => op_mem_write_impl_Lo_U0_write_mem_config_off_6_read);

    dout_gmem_V_offset_c_U : component fifo_w58_d5_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => op_mem_write_impl_Bl_U0_dout_gmem_V_offset_out_din,
        if_full_n => dout_gmem_V_offset_c_full_n,
        if_write => op_mem_write_impl_Bl_U0_dout_gmem_V_offset_out_write,
        if_dout => dout_gmem_V_offset_c_dout,
        if_empty_n => dout_gmem_V_offset_c_empty_n,
        if_read => op_mem_write_impl_Lo_U0_dout_gmem_V_offset_read);

    tmp_2_cast20_loc_cha_U : component fifo_w8_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => op_mem_write_impl_Bl_U0_ap_return_0,
        if_full_n => tmp_2_cast20_loc_cha_full_n,
        if_write => ap_channel_done_tmp_2_cast20_loc_cha,
        if_dout => tmp_2_cast20_loc_cha_dout,
        if_empty_n => tmp_2_cast20_loc_cha_empty_n,
        if_read => op_mem_write_impl_Lo_2_U0_ap_ready);

    insert_padding_eleme_U : component fifo_w8_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => op_mem_write_impl_Bl_U0_ap_return_1,
        if_full_n => insert_padding_eleme_full_n,
        if_write => ap_channel_done_insert_padding_eleme,
        if_dout => insert_padding_eleme_dout,
        if_empty_n => insert_padding_eleme_empty_n,
        if_read => op_mem_write_impl_Lo_2_U0_ap_ready);

    tmp_3_loc_channel_U : component fifo_w64_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => op_mem_write_impl_Bl_U0_ap_return_2,
        if_full_n => tmp_3_loc_channel_full_n,
        if_write => ap_channel_done_tmp_3_loc_channel,
        if_dout => tmp_3_loc_channel_dout,
        if_empty_n => tmp_3_loc_channel_empty_n,
        if_read => op_mem_write_impl_Lo_2_U0_ap_ready);

    op2_assign_3_cast18_s_U : component fifo_w8_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => op_mem_write_impl_Bl_U0_ap_return_3,
        if_full_n => op2_assign_3_cast18_s_full_n,
        if_write => ap_channel_done_op2_assign_3_cast18_s,
        if_dout => op2_assign_3_cast18_s_dout,
        if_empty_n => op2_assign_3_cast18_s_empty_n,
        if_read => op_mem_write_impl_Lo_2_U0_ap_ready);

    tmp_4_loc_channel_U : component fifo_w64_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => op_mem_write_impl_Bl_U0_ap_return_4,
        if_full_n => tmp_4_loc_channel_full_n,
        if_write => ap_channel_done_tmp_4_loc_channel,
        if_dout => tmp_4_loc_channel_dout,
        if_empty_n => tmp_4_loc_channel_empty_n,
        if_read => op_mem_write_impl_Lo_2_U0_ap_ready);

    aligned_stream_V_dat_U : component fifo_w64_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => op_mem_write_impl_Lo_2_U0_aligned_stream_V_data_V_din,
        if_full_n => aligned_stream_V_dat_full_n,
        if_write => op_mem_write_impl_Lo_2_U0_aligned_stream_V_data_V_write,
        if_dout => aligned_stream_V_dat_dout,
        if_empty_n => aligned_stream_V_dat_empty_n,
        if_read => op_mem_write_impl_Lo_1_U0_aligned_stream_V_data_V_read);

    aligned_stream_V_str_U : component fifo_w8_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => op_mem_write_impl_Lo_2_U0_aligned_stream_V_strb_V_din,
        if_full_n => aligned_stream_V_str_full_n,
        if_write => op_mem_write_impl_Lo_2_U0_aligned_stream_V_strb_V_write,
        if_dout => aligned_stream_V_str_dout,
        if_empty_n => aligned_stream_V_str_empty_n,
        if_read => op_mem_write_impl_Lo_1_U0_aligned_stream_V_strb_V_read);

    aligned_stream_V_las_U : component fifo_w1_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => op_mem_write_impl_Lo_2_U0_aligned_stream_V_last_V_din,
        if_full_n => aligned_stream_V_las_full_n,
        if_write => op_mem_write_impl_Lo_2_U0_aligned_stream_V_last_V_write,
        if_dout => aligned_stream_V_las_dout,
        if_empty_n => aligned_stream_V_las_empty_n,
        if_read => op_mem_write_impl_Lo_1_U0_aligned_stream_V_last_V_read);

    word_stream_V_data_V_U : component fifo_w512_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => op_mem_write_impl_Lo_1_U0_word_stream_V_data_V_din,
        if_full_n => word_stream_V_data_V_full_n,
        if_write => op_mem_write_impl_Lo_1_U0_word_stream_V_data_V_write,
        if_dout => word_stream_V_data_V_dout,
        if_empty_n => word_stream_V_data_V_empty_n,
        if_read => op_mem_write_impl_Lo_3_U0_word_stream_V_data_V_read);

    word_stream_V_strb_V_U : component fifo_w64_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => op_mem_write_impl_Lo_1_U0_word_stream_V_strb_V_din,
        if_full_n => word_stream_V_strb_V_full_n,
        if_write => op_mem_write_impl_Lo_1_U0_word_stream_V_strb_V_write,
        if_dout => word_stream_V_strb_V_dout,
        if_empty_n => word_stream_V_strb_V_empty_n,
        if_read => op_mem_write_impl_Lo_3_U0_word_stream_V_strb_V_read);

    word_stream_V_last_V_U : component fifo_w1_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => op_mem_write_impl_Lo_1_U0_word_stream_V_last_V_din,
        if_full_n => word_stream_V_last_V_full_n,
        if_write => op_mem_write_impl_Lo_1_U0_word_stream_V_last_V_write,
        if_dout => word_stream_V_last_V_dout,
        if_empty_n => word_stream_V_last_V_empty_n,
        if_read => op_mem_write_impl_Lo_3_U0_word_stream_V_last_V_read);

    padded_word_stream_V_U : component fifo_w512_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => op_mem_write_impl_Lo_3_U0_padded_word_stream_V_data_V_din,
        if_full_n => padded_word_stream_V_full_n,
        if_write => op_mem_write_impl_Lo_3_U0_padded_word_stream_V_data_V_write,
        if_dout => padded_word_stream_V_dout,
        if_empty_n => padded_word_stream_V_empty_n,
        if_read => op_mem_write_impl_Lo_U0_padded_word_stream_V_read);

    padded_word_stream_V_1_U : component fifo_w64_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => op_mem_write_impl_Lo_3_U0_padded_word_stream_V_strb_V_din,
        if_full_n => padded_word_stream_V_1_full_n,
        if_write => op_mem_write_impl_Lo_3_U0_padded_word_stream_V_strb_V_write,
        if_dout => padded_word_stream_V_1_dout,
        if_empty_n => padded_word_stream_V_1_empty_n,
        if_read => op_mem_write_impl_Lo_U0_padded_word_stream_V_1_read);

    padded_word_stream_V_2_U : component fifo_w1_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => op_mem_write_impl_Lo_3_U0_padded_word_stream_V_last_V_din,
        if_full_n => padded_word_stream_V_2_full_n,
        if_write => op_mem_write_impl_Lo_3_U0_padded_word_stream_V_last_V_write,
        if_dout => padded_word_stream_V_2_dout,
        if_empty_n => padded_word_stream_V_2_empty_n,
        if_read => op_mem_write_impl_Lo_U0_padded_word_stream_V_2_read);

    start_for_op_mem_g8j_U : component start_for_op_mem_g8j
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_op_mem_write_impl_Lo_3_U0_din,
        if_full_n => start_for_op_mem_write_impl_Lo_3_U0_full_n,
        if_write => op_mem_write_impl_Bl_U0_start_write,
        if_dout => start_for_op_mem_write_impl_Lo_3_U0_dout,
        if_empty_n => start_for_op_mem_write_impl_Lo_3_U0_empty_n,
        if_read => op_mem_write_impl_Lo_3_U0_ap_ready);

    start_for_op_mem_hbi_U : component start_for_op_mem_hbi
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_op_mem_write_impl_Lo_1_U0_din,
        if_full_n => start_for_op_mem_write_impl_Lo_1_U0_full_n,
        if_write => op_mem_write_impl_Lo_2_U0_start_write,
        if_dout => start_for_op_mem_write_impl_Lo_1_U0_dout,
        if_empty_n => start_for_op_mem_write_impl_Lo_1_U0_empty_n,
        if_read => op_mem_write_impl_Lo_1_U0_ap_ready);





    ap_sync_reg_channel_write_insert_padding_eleme_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_insert_padding_eleme <= ap_const_logic_0;
            else
                if (((op_mem_write_impl_Bl_U0_ap_done and op_mem_write_impl_Bl_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_insert_padding_eleme <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_insert_padding_eleme <= ap_sync_channel_write_insert_padding_eleme;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_op2_assign_3_cast18_s_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_op2_assign_3_cast18_s <= ap_const_logic_0;
            else
                if (((op_mem_write_impl_Bl_U0_ap_done and op_mem_write_impl_Bl_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_op2_assign_3_cast18_s <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_op2_assign_3_cast18_s <= ap_sync_channel_write_op2_assign_3_cast18_s;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_tmp_2_cast20_loc_cha_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_tmp_2_cast20_loc_cha <= ap_const_logic_0;
            else
                if (((op_mem_write_impl_Bl_U0_ap_done and op_mem_write_impl_Bl_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_tmp_2_cast20_loc_cha <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_tmp_2_cast20_loc_cha <= ap_sync_channel_write_tmp_2_cast20_loc_cha;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_tmp_3_loc_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_tmp_3_loc_channel <= ap_const_logic_0;
            else
                if (((op_mem_write_impl_Bl_U0_ap_done and op_mem_write_impl_Bl_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_tmp_3_loc_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_tmp_3_loc_channel <= ap_sync_channel_write_tmp_3_loc_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_tmp_4_loc_channel_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_tmp_4_loc_channel <= ap_const_logic_0;
            else
                if (((op_mem_write_impl_Bl_U0_ap_done and op_mem_write_impl_Bl_U0_ap_continue) = ap_const_logic_1)) then 
                    ap_sync_reg_channel_write_tmp_4_loc_channel <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_tmp_4_loc_channel <= ap_sync_channel_write_tmp_4_loc_channel;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_op_mem_write_impl_Bl_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_op_mem_write_impl_Bl_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_op_mem_write_impl_Bl_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_op_mem_write_impl_Bl_U0_ap_ready <= ap_sync_op_mem_write_impl_Bl_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_op_mem_write_impl_Lo_2_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_op_mem_write_impl_Lo_2_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_op_mem_write_impl_Lo_2_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_op_mem_write_impl_Lo_2_U0_ap_ready <= ap_sync_op_mem_write_impl_Lo_2_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_op_mem_write_impl_Lo_U0_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_op_mem_write_impl_Lo_U0_ap_ready <= ap_const_logic_0;
            else
                if (((ap_sync_ready and ap_start) = ap_const_logic_1)) then 
                    ap_sync_reg_op_mem_write_impl_Lo_U0_ap_ready <= ap_const_logic_0;
                else 
                    ap_sync_reg_op_mem_write_impl_Lo_U0_ap_ready <= ap_sync_op_mem_write_impl_Lo_U0_ap_ready;
                end if; 
            end if;
        end if;
    end process;


    op_mem_write_impl_Bl_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (op_mem_write_impl_Bl_U0_ap_ready = ap_const_logic_0))) then 
                op_mem_write_impl_Bl_U0_ap_ready_count <= std_logic_vector(unsigned(op_mem_write_impl_Bl_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((op_mem_write_impl_Bl_U0_ap_ready = ap_const_logic_1) and (ap_sync_ready = ap_const_logic_0))) then 
                op_mem_write_impl_Bl_U0_ap_ready_count <= std_logic_vector(unsigned(op_mem_write_impl_Bl_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    op_mem_write_impl_Lo_2_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (op_mem_write_impl_Lo_2_U0_ap_ready = ap_const_logic_0))) then 
                op_mem_write_impl_Lo_2_U0_ap_ready_count <= std_logic_vector(unsigned(op_mem_write_impl_Lo_2_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((op_mem_write_impl_Lo_2_U0_ap_ready = ap_const_logic_1) and (ap_sync_ready = ap_const_logic_0))) then 
                op_mem_write_impl_Lo_2_U0_ap_ready_count <= std_logic_vector(unsigned(op_mem_write_impl_Lo_2_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;

    op_mem_write_impl_Lo_U0_ap_ready_count_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_sync_ready = ap_const_logic_1) and (op_mem_write_impl_Lo_U0_ap_ready = ap_const_logic_0))) then 
                op_mem_write_impl_Lo_U0_ap_ready_count <= std_logic_vector(unsigned(op_mem_write_impl_Lo_U0_ap_ready_count) - unsigned(ap_const_lv2_1));
            elsif (((op_mem_write_impl_Lo_U0_ap_ready = ap_const_logic_1) and (ap_sync_ready = ap_const_logic_0))) then 
                op_mem_write_impl_Lo_U0_ap_ready_count <= std_logic_vector(unsigned(op_mem_write_impl_Lo_U0_ap_ready_count) + unsigned(ap_const_lv2_1));
            end if; 
        end if;
    end process;
    ap_channel_done_insert_padding_eleme <= (op_mem_write_impl_Bl_U0_ap_done and (ap_sync_reg_channel_write_insert_padding_eleme xor ap_const_logic_1));
    ap_channel_done_op2_assign_3_cast18_s <= (op_mem_write_impl_Bl_U0_ap_done and (ap_sync_reg_channel_write_op2_assign_3_cast18_s xor ap_const_logic_1));
    ap_channel_done_tmp_2_cast20_loc_cha <= (op_mem_write_impl_Bl_U0_ap_done and (ap_sync_reg_channel_write_tmp_2_cast20_loc_cha xor ap_const_logic_1));
    ap_channel_done_tmp_3_loc_channel <= (op_mem_write_impl_Bl_U0_ap_done and (ap_sync_reg_channel_write_tmp_3_loc_channel xor ap_const_logic_1));
    ap_channel_done_tmp_4_loc_channel <= (op_mem_write_impl_Bl_U0_ap_done and (ap_sync_reg_channel_write_tmp_4_loc_channel xor ap_const_logic_1));
    ap_done <= op_mem_write_impl_Lo_U0_ap_done;
    ap_idle <= (op_mem_write_impl_Lo_U0_ap_idle and op_mem_write_impl_Lo_3_U0_ap_idle and op_mem_write_impl_Lo_2_U0_ap_idle and op_mem_write_impl_Lo_1_U0_ap_idle and op_mem_write_impl_Bl_U0_ap_idle and (tmp_4_loc_channel_empty_n xor ap_const_logic_1) and (op2_assign_3_cast18_s_empty_n xor ap_const_logic_1) and (tmp_3_loc_channel_empty_n xor ap_const_logic_1) and (insert_padding_eleme_empty_n xor ap_const_logic_1) and (tmp_2_cast20_loc_cha_empty_n xor ap_const_logic_1));
    ap_ready <= ap_sync_ready;
    ap_sync_channel_write_insert_padding_eleme <= ((insert_padding_eleme_full_n and ap_channel_done_insert_padding_eleme) or ap_sync_reg_channel_write_insert_padding_eleme);
    ap_sync_channel_write_op2_assign_3_cast18_s <= ((op2_assign_3_cast18_s_full_n and ap_channel_done_op2_assign_3_cast18_s) or ap_sync_reg_channel_write_op2_assign_3_cast18_s);
    ap_sync_channel_write_tmp_2_cast20_loc_cha <= ((tmp_2_cast20_loc_cha_full_n and ap_channel_done_tmp_2_cast20_loc_cha) or ap_sync_reg_channel_write_tmp_2_cast20_loc_cha);
    ap_sync_channel_write_tmp_3_loc_channel <= ((tmp_3_loc_channel_full_n and ap_channel_done_tmp_3_loc_channel) or ap_sync_reg_channel_write_tmp_3_loc_channel);
    ap_sync_channel_write_tmp_4_loc_channel <= ((tmp_4_loc_channel_full_n and ap_channel_done_tmp_4_loc_channel) or ap_sync_reg_channel_write_tmp_4_loc_channel);
    ap_sync_continue <= ap_continue;
    ap_sync_done <= op_mem_write_impl_Lo_U0_ap_done;
    ap_sync_op_mem_write_impl_Bl_U0_ap_ready <= (op_mem_write_impl_Bl_U0_ap_ready or ap_sync_reg_op_mem_write_impl_Bl_U0_ap_ready);
    ap_sync_op_mem_write_impl_Lo_2_U0_ap_ready <= (op_mem_write_impl_Lo_2_U0_ap_ready or ap_sync_reg_op_mem_write_impl_Lo_2_U0_ap_ready);
    ap_sync_op_mem_write_impl_Lo_U0_ap_ready <= (op_mem_write_impl_Lo_U0_ap_ready or ap_sync_reg_op_mem_write_impl_Lo_U0_ap_ready);
    ap_sync_ready <= (ap_sync_op_mem_write_impl_Lo_U0_ap_ready and ap_sync_op_mem_write_impl_Lo_2_U0_ap_ready and ap_sync_op_mem_write_impl_Bl_U0_ap_ready);
    axis_s_0_TREADY <= op_mem_write_impl_Lo_2_U0_axis_s_0_TREADY;
    m_axi_dout_gmem_V_ARADDR <= ap_const_lv64_0;
    m_axi_dout_gmem_V_ARBURST <= ap_const_lv2_0;
    m_axi_dout_gmem_V_ARCACHE <= ap_const_lv4_0;
    m_axi_dout_gmem_V_ARID <= ap_const_lv1_0;
    m_axi_dout_gmem_V_ARLEN <= ap_const_lv32_0;
    m_axi_dout_gmem_V_ARLOCK <= ap_const_lv2_0;
    m_axi_dout_gmem_V_ARPROT <= ap_const_lv3_0;
    m_axi_dout_gmem_V_ARQOS <= ap_const_lv4_0;
    m_axi_dout_gmem_V_ARREGION <= ap_const_lv4_0;
    m_axi_dout_gmem_V_ARSIZE <= ap_const_lv3_0;
    m_axi_dout_gmem_V_ARUSER <= ap_const_lv1_0;
    m_axi_dout_gmem_V_ARVALID <= ap_const_logic_0;
    m_axi_dout_gmem_V_AWADDR <= op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWADDR;
    m_axi_dout_gmem_V_AWBURST <= op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWBURST;
    m_axi_dout_gmem_V_AWCACHE <= op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWCACHE;
    m_axi_dout_gmem_V_AWID <= op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWID;
    m_axi_dout_gmem_V_AWLEN <= op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWLEN;
    m_axi_dout_gmem_V_AWLOCK <= op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWLOCK;
    m_axi_dout_gmem_V_AWPROT <= op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWPROT;
    m_axi_dout_gmem_V_AWQOS <= op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWQOS;
    m_axi_dout_gmem_V_AWREGION <= op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWREGION;
    m_axi_dout_gmem_V_AWSIZE <= op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWSIZE;
    m_axi_dout_gmem_V_AWUSER <= op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWUSER;
    m_axi_dout_gmem_V_AWVALID <= op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_AWVALID;
    m_axi_dout_gmem_V_BREADY <= op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_BREADY;
    m_axi_dout_gmem_V_RREADY <= ap_const_logic_0;
    m_axi_dout_gmem_V_WDATA <= op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_WDATA;
    m_axi_dout_gmem_V_WID <= op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_WID;
    m_axi_dout_gmem_V_WLAST <= op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_WLAST;
    m_axi_dout_gmem_V_WSTRB <= op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_WSTRB;
    m_axi_dout_gmem_V_WUSER <= op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_WUSER;
    m_axi_dout_gmem_V_WVALID <= op_mem_write_impl_Lo_U0_m_axi_dout_gmem_V_WVALID;
    op_mem_write_impl_Bl_U0_ap_continue <= (ap_sync_channel_write_tmp_4_loc_channel and ap_sync_channel_write_tmp_3_loc_channel and ap_sync_channel_write_tmp_2_cast20_loc_cha and ap_sync_channel_write_op2_assign_3_cast18_s and ap_sync_channel_write_insert_padding_eleme);
    op_mem_write_impl_Bl_U0_ap_start <= ((ap_sync_reg_op_mem_write_impl_Bl_U0_ap_ready xor ap_const_logic_1) and ap_start);
    op_mem_write_impl_Lo_1_U0_ap_continue <= ap_const_logic_1;
    op_mem_write_impl_Lo_1_U0_ap_start <= start_for_op_mem_write_impl_Lo_1_U0_empty_n;
    op_mem_write_impl_Lo_1_U0_start_full_n <= ap_const_logic_1;
    op_mem_write_impl_Lo_1_U0_start_write <= ap_const_logic_0;
    op_mem_write_impl_Lo_2_U0_ap_continue <= ap_const_logic_1;
    op_mem_write_impl_Lo_2_U0_ap_start <= (tmp_4_loc_channel_empty_n and tmp_3_loc_channel_empty_n and tmp_2_cast20_loc_cha_empty_n and op2_assign_3_cast18_s_empty_n and insert_padding_eleme_empty_n and (ap_sync_reg_op_mem_write_impl_Lo_2_U0_ap_ready xor ap_const_logic_1) and ap_start);
    op_mem_write_impl_Lo_3_U0_ap_continue <= ap_const_logic_1;
    op_mem_write_impl_Lo_3_U0_ap_start <= start_for_op_mem_write_impl_Lo_3_U0_empty_n;
    op_mem_write_impl_Lo_3_U0_start_full_n <= ap_const_logic_1;
    op_mem_write_impl_Lo_3_U0_start_write <= ap_const_logic_0;
    op_mem_write_impl_Lo_U0_ap_continue <= ap_continue;
    op_mem_write_impl_Lo_U0_ap_start <= ((ap_sync_reg_op_mem_write_impl_Lo_U0_ap_ready xor ap_const_logic_1) and ap_start);
    op_mem_write_impl_Lo_U0_start_full_n <= ap_const_logic_1;
    op_mem_write_impl_Lo_U0_start_write <= ap_const_logic_0;
    start_for_op_mem_write_impl_Lo_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_op_mem_write_impl_Lo_3_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;
