-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity op_mem_read_impl_Loo is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    tmp_33_cast25_loc_dout : IN STD_LOGIC_VECTOR (2 downto 0);
    tmp_33_cast25_loc_empty_n : IN STD_LOGIC;
    tmp_33_cast25_loc_read : OUT STD_LOGIC;
    mtl_word_stream_V_data_V_dout : IN STD_LOGIC_VECTOR (63 downto 0);
    mtl_word_stream_V_data_V_empty_n : IN STD_LOGIC;
    mtl_word_stream_V_data_V_read : OUT STD_LOGIC;
    mtl_word_stream_V_strb_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    mtl_word_stream_V_strb_V_empty_n : IN STD_LOGIC;
    mtl_word_stream_V_strb_V_read : OUT STD_LOGIC;
    mtl_word_stream_V_last_V_dout : IN STD_LOGIC_VECTOR (0 downto 0);
    mtl_word_stream_V_last_V_empty_n : IN STD_LOGIC;
    mtl_word_stream_V_last_V_read : OUT STD_LOGIC;
    mtl_word_stream_aligned_V_data_V_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    mtl_word_stream_aligned_V_data_V_full_n : IN STD_LOGIC;
    mtl_word_stream_aligned_V_data_V_write : OUT STD_LOGIC;
    mtl_word_stream_aligned_V_strb_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    mtl_word_stream_aligned_V_strb_V_full_n : IN STD_LOGIC;
    mtl_word_stream_aligned_V_strb_V_write : OUT STD_LOGIC;
    mtl_word_stream_aligned_V_last_V_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    mtl_word_stream_aligned_V_last_V_full_n : IN STD_LOGIC;
    mtl_word_stream_aligned_V_last_V_write : OUT STD_LOGIC );
end;


architecture behav of op_mem_read_impl_Loo is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal tmp_33_cast25_loc_blk_n : STD_LOGIC;
    signal mtl_word_stream_V_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal mtl_word_stream_V_strb_V_blk_n : STD_LOGIC;
    signal mtl_word_stream_V_last_V_blk_n : STD_LOGIC;
    signal mtl_word_stream_aligned_V_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal p_i_i_reg_174 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal mtl_word_stream_aligned_V_strb_V_blk_n : STD_LOGIC;
    signal mtl_word_stream_aligned_V_last_V_blk_n : STD_LOGIC;
    signal tmp_46_cast13_i_i_fu_188_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_46_cast13_i_i_reg_321 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal op2_assign_4_cast11_s_fu_202_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal op2_assign_4_cast11_s_reg_326 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_47_i_i_fu_214_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_47_i_i_reg_331 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_i_i_fu_226_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_i_i_reg_336 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_data_V18_reg_341 : STD_LOGIC_VECTOR (63 downto 0);
    signal mtl_word_stream_V_data_V0_status : STD_LOGIC;
    signal tmp_strb_V19_reg_346 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_last_V_10_reg_351 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_fu_242_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_reg_355 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_5_fu_247_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_5_reg_360 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_8_fu_274_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_8_reg_365 : STD_LOGIC_VECTOR (63 downto 0);
    signal mtl_word_stream_aligned_V_data_V1_status : STD_LOGIC;
    signal ap_block_state3 : BOOLEAN;
    signal r_V_9_fu_278_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_9_reg_370 : STD_LOGIC_VECTOR (7 downto 0);
    signal mtl_word_stream_V_data_V0_update : STD_LOGIC;
    signal mtl_word_stream_aligned_V_data_V1_update : STD_LOGIC;
    signal previous_element_dat_fu_262_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal previous_element_str_fu_268_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_last_V_fu_132 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_strb_V_fu_136 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_data_V_fu_140 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_cast_i_i_fu_192_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal op2_assign_1_fu_196_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal op2_assign_fu_206_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal op2_assign_2_fu_218_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (mtl_word_stream_aligned_V_data_V1_status = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    p_i_i_reg_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((p_i_i_reg_174 = ap_const_lv1_1) and (mtl_word_stream_aligned_V_data_V1_status = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_last_V_10_reg_351 = ap_const_lv1_0))) then 
                p_i_i_reg_174 <= ap_const_lv1_1;
            elsif ((not(((tmp_33_cast25_loc_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_i_i_reg_174 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    tmp_last_V_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (mtl_word_stream_aligned_V_data_V1_status = ap_const_logic_1))) then 
                tmp_last_V_fu_132 <= ap_const_lv1_1;
            elsif ((not(((p_i_i_reg_174 = ap_const_lv1_1) and (mtl_word_stream_aligned_V_data_V1_status = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_last_V_10_reg_351 = ap_const_lv1_0))) then 
                tmp_last_V_fu_132 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((tmp_33_cast25_loc_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    op2_assign_4_cast11_s_reg_326(3 downto 0) <= op2_assign_4_cast11_s_fu_202_p1(3 downto 0);
                    tmp_46_cast13_i_i_reg_321(2 downto 0) <= tmp_46_cast13_i_i_fu_188_p1(2 downto 0);
                    tmp_47_i_i_reg_331(6 downto 3) <= tmp_47_i_i_fu_214_p1(6 downto 3);
                    tmp_48_i_i_reg_336(5 downto 3) <= tmp_48_i_i_fu_226_p1(5 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (mtl_word_stream_V_data_V0_status = ap_const_logic_1))) then
                r_V_5_reg_360 <= r_V_5_fu_247_p2;
                r_V_reg_355 <= r_V_fu_242_p2;
                tmp_data_V18_reg_341 <= mtl_word_stream_V_data_V_dout;
                tmp_last_V_10_reg_351 <= mtl_word_stream_V_last_V_dout;
                tmp_strb_V19_reg_346 <= mtl_word_stream_V_strb_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((p_i_i_reg_174 = ap_const_lv1_1) and (mtl_word_stream_aligned_V_data_V1_status = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                r_V_8_reg_365 <= r_V_8_fu_274_p2;
                r_V_9_reg_370 <= r_V_9_fu_278_p2;
                tmp_data_V_fu_140 <= r_V_8_fu_274_p2;
                tmp_strb_V_fu_136 <= r_V_9_fu_278_p2;
            end if;
        end if;
    end process;
    tmp_46_cast13_i_i_reg_321(7 downto 3) <= "00000";
    op2_assign_4_cast11_s_reg_326(7 downto 4) <= "0000";
    tmp_47_i_i_reg_331(2 downto 0) <= "000";
    tmp_47_i_i_reg_331(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    tmp_48_i_i_reg_336(2 downto 0) <= "000";
    tmp_48_i_i_reg_336(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, tmp_33_cast25_loc_empty_n, ap_CS_fsm_state2, ap_CS_fsm_state3, p_i_i_reg_174, ap_CS_fsm_state4, mtl_word_stream_V_data_V0_status, tmp_last_V_10_reg_351, mtl_word_stream_aligned_V_data_V1_status)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((tmp_33_cast25_loc_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (mtl_word_stream_V_data_V0_status = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((p_i_i_reg_174 = ap_const_lv1_1) and (mtl_word_stream_aligned_V_data_V1_status = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_last_V_10_reg_351 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not(((p_i_i_reg_174 = ap_const_lv1_1) and (mtl_word_stream_aligned_V_data_V1_status = ap_const_logic_0))) and (tmp_last_V_10_reg_351 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (mtl_word_stream_aligned_V_data_V1_status = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg, tmp_33_cast25_loc_empty_n)
    begin
                ap_block_state1 <= ((tmp_33_cast25_loc_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state3_assign_proc : process(p_i_i_reg_174, mtl_word_stream_aligned_V_data_V1_status)
    begin
                ap_block_state3 <= ((p_i_i_reg_174 = ap_const_lv1_1) and (mtl_word_stream_aligned_V_data_V1_status = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state4, mtl_word_stream_aligned_V_data_V1_status)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (mtl_word_stream_aligned_V_data_V1_status = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state4, mtl_word_stream_aligned_V_data_V1_status)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (mtl_word_stream_aligned_V_data_V1_status = ap_const_logic_1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    mtl_word_stream_V_data_V0_status <= (mtl_word_stream_V_strb_V_empty_n and mtl_word_stream_V_last_V_empty_n and mtl_word_stream_V_data_V_empty_n);

    mtl_word_stream_V_data_V0_update_assign_proc : process(ap_CS_fsm_state2, mtl_word_stream_V_data_V0_status)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (mtl_word_stream_V_data_V0_status = ap_const_logic_1))) then 
            mtl_word_stream_V_data_V0_update <= ap_const_logic_1;
        else 
            mtl_word_stream_V_data_V0_update <= ap_const_logic_0;
        end if; 
    end process;


    mtl_word_stream_V_data_V_blk_n_assign_proc : process(mtl_word_stream_V_data_V_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            mtl_word_stream_V_data_V_blk_n <= mtl_word_stream_V_data_V_empty_n;
        else 
            mtl_word_stream_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    mtl_word_stream_V_data_V_read <= mtl_word_stream_V_data_V0_update;

    mtl_word_stream_V_last_V_blk_n_assign_proc : process(mtl_word_stream_V_last_V_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            mtl_word_stream_V_last_V_blk_n <= mtl_word_stream_V_last_V_empty_n;
        else 
            mtl_word_stream_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    mtl_word_stream_V_last_V_read <= mtl_word_stream_V_data_V0_update;

    mtl_word_stream_V_strb_V_blk_n_assign_proc : process(mtl_word_stream_V_strb_V_empty_n, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            mtl_word_stream_V_strb_V_blk_n <= mtl_word_stream_V_strb_V_empty_n;
        else 
            mtl_word_stream_V_strb_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    mtl_word_stream_V_strb_V_read <= mtl_word_stream_V_data_V0_update;
    mtl_word_stream_aligned_V_data_V1_status <= (mtl_word_stream_aligned_V_strb_V_full_n and mtl_word_stream_aligned_V_last_V_full_n and mtl_word_stream_aligned_V_data_V_full_n);

    mtl_word_stream_aligned_V_data_V1_update_assign_proc : process(ap_CS_fsm_state3, p_i_i_reg_174, ap_CS_fsm_state4, mtl_word_stream_aligned_V_data_V1_status)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state4) and (mtl_word_stream_aligned_V_data_V1_status = ap_const_logic_1)) or (not(((p_i_i_reg_174 = ap_const_lv1_1) and (mtl_word_stream_aligned_V_data_V1_status = ap_const_logic_0))) and (p_i_i_reg_174 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            mtl_word_stream_aligned_V_data_V1_update <= ap_const_logic_1;
        else 
            mtl_word_stream_aligned_V_data_V1_update <= ap_const_logic_0;
        end if; 
    end process;


    mtl_word_stream_aligned_V_data_V_blk_n_assign_proc : process(mtl_word_stream_aligned_V_data_V_full_n, ap_CS_fsm_state3, p_i_i_reg_174, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((p_i_i_reg_174 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            mtl_word_stream_aligned_V_data_V_blk_n <= mtl_word_stream_aligned_V_data_V_full_n;
        else 
            mtl_word_stream_aligned_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    mtl_word_stream_aligned_V_data_V_din_assign_proc : process(ap_CS_fsm_state3, p_i_i_reg_174, ap_CS_fsm_state4, r_V_8_reg_365, mtl_word_stream_aligned_V_data_V1_status, previous_element_dat_fu_262_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (mtl_word_stream_aligned_V_data_V1_status = ap_const_logic_1))) then 
            mtl_word_stream_aligned_V_data_V_din <= r_V_8_reg_365;
        elsif ((not(((p_i_i_reg_174 = ap_const_lv1_1) and (mtl_word_stream_aligned_V_data_V1_status = ap_const_logic_0))) and (p_i_i_reg_174 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            mtl_word_stream_aligned_V_data_V_din <= previous_element_dat_fu_262_p2;
        else 
            mtl_word_stream_aligned_V_data_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    mtl_word_stream_aligned_V_data_V_write <= mtl_word_stream_aligned_V_data_V1_update;

    mtl_word_stream_aligned_V_last_V_blk_n_assign_proc : process(mtl_word_stream_aligned_V_last_V_full_n, ap_CS_fsm_state3, p_i_i_reg_174, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((p_i_i_reg_174 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            mtl_word_stream_aligned_V_last_V_blk_n <= mtl_word_stream_aligned_V_last_V_full_n;
        else 
            mtl_word_stream_aligned_V_last_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    mtl_word_stream_aligned_V_last_V_din_assign_proc : process(ap_CS_fsm_state3, p_i_i_reg_174, ap_CS_fsm_state4, mtl_word_stream_aligned_V_data_V1_status, tmp_last_V_fu_132)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (mtl_word_stream_aligned_V_data_V1_status = ap_const_logic_1))) then 
            mtl_word_stream_aligned_V_last_V_din <= ap_const_lv1_1;
        elsif ((not(((p_i_i_reg_174 = ap_const_lv1_1) and (mtl_word_stream_aligned_V_data_V1_status = ap_const_logic_0))) and (p_i_i_reg_174 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            mtl_word_stream_aligned_V_last_V_din <= tmp_last_V_fu_132;
        else 
            mtl_word_stream_aligned_V_last_V_din <= "X";
        end if; 
    end process;

    mtl_word_stream_aligned_V_last_V_write <= mtl_word_stream_aligned_V_data_V1_update;

    mtl_word_stream_aligned_V_strb_V_blk_n_assign_proc : process(mtl_word_stream_aligned_V_strb_V_full_n, ap_CS_fsm_state3, p_i_i_reg_174, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or ((p_i_i_reg_174 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            mtl_word_stream_aligned_V_strb_V_blk_n <= mtl_word_stream_aligned_V_strb_V_full_n;
        else 
            mtl_word_stream_aligned_V_strb_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    mtl_word_stream_aligned_V_strb_V_din_assign_proc : process(ap_CS_fsm_state3, p_i_i_reg_174, ap_CS_fsm_state4, mtl_word_stream_aligned_V_data_V1_status, r_V_9_reg_370, previous_element_str_fu_268_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (mtl_word_stream_aligned_V_data_V1_status = ap_const_logic_1))) then 
            mtl_word_stream_aligned_V_strb_V_din <= r_V_9_reg_370;
        elsif ((not(((p_i_i_reg_174 = ap_const_lv1_1) and (mtl_word_stream_aligned_V_data_V1_status = ap_const_logic_0))) and (p_i_i_reg_174 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            mtl_word_stream_aligned_V_strb_V_din <= previous_element_str_fu_268_p2;
        else 
            mtl_word_stream_aligned_V_strb_V_din <= "XXXXXXXX";
        end if; 
    end process;

    mtl_word_stream_aligned_V_strb_V_write <= mtl_word_stream_aligned_V_data_V1_update;
    op2_assign_1_fu_196_p2 <= std_logic_vector(signed(ap_const_lv4_8) - signed(tmp_46_cast_i_i_fu_192_p1));
    op2_assign_2_fu_218_p3 <= (tmp_33_cast25_loc_dout & ap_const_lv3_0);
    op2_assign_4_cast11_s_fu_202_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(op2_assign_1_fu_196_p2),8));
    op2_assign_fu_206_p3 <= (op2_assign_1_fu_196_p2 & ap_const_lv3_0);
    previous_element_dat_fu_262_p2 <= (tmp_data_V_fu_140 or r_V_reg_355);
    previous_element_str_fu_268_p2 <= (tmp_strb_V_fu_136 or r_V_5_reg_360);
    r_V_5_fu_247_p2 <= std_logic_vector(shift_left(unsigned(mtl_word_stream_V_strb_V_dout),to_integer(unsigned('0' & op2_assign_4_cast11_s_reg_326(8-1 downto 0)))));
    r_V_8_fu_274_p2 <= std_logic_vector(shift_right(unsigned(tmp_data_V18_reg_341),to_integer(unsigned('0' & tmp_48_i_i_reg_336(31-1 downto 0)))));
    r_V_9_fu_278_p2 <= std_logic_vector(shift_right(unsigned(tmp_strb_V19_reg_346),to_integer(unsigned('0' & tmp_46_cast13_i_i_reg_321(8-1 downto 0)))));
    r_V_fu_242_p2 <= std_logic_vector(shift_left(unsigned(mtl_word_stream_V_data_V_dout),to_integer(unsigned('0' & tmp_47_i_i_reg_331(31-1 downto 0)))));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;


    tmp_33_cast25_loc_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, tmp_33_cast25_loc_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            tmp_33_cast25_loc_blk_n <= tmp_33_cast25_loc_empty_n;
        else 
            tmp_33_cast25_loc_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    tmp_33_cast25_loc_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, tmp_33_cast25_loc_empty_n)
    begin
        if ((not(((tmp_33_cast25_loc_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            tmp_33_cast25_loc_read <= ap_const_logic_1;
        else 
            tmp_33_cast25_loc_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp_46_cast13_i_i_fu_188_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_cast25_loc_dout),8));
    tmp_46_cast_i_i_fu_192_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_33_cast25_loc_dout),4));
    tmp_47_i_i_fu_214_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(op2_assign_fu_206_p3),64));
    tmp_48_i_i_fu_226_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(op2_assign_2_fu_218_p3),64));
end behav;
