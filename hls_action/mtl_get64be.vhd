-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mtl_get64be is
port (
    ap_ready : OUT STD_LOGIC;
    busline_V_read : IN STD_LOGIC_VECTOR (511 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of mtl_get64be is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal p_Result_1_fu_54_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_68_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_fu_72_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_47_fu_82_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_48_fu_92_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_fu_102_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_50_fu_112_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_46_fu_44_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_s_fu_64_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_122_p9 : STD_LOGIC_VECTOR (63 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return <= std_logic_vector(unsigned(p_Result_s_fu_64_p1) + unsigned(tmp_8_fu_122_p9));
    p_Result_1_fu_54_p4 <= busline_V_read(63 downto 56);
    p_Result_s_fu_64_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1_fu_54_p4),64));
    tmp_46_fu_44_p4 <= busline_V_read(55 downto 48);
    tmp_47_fu_82_p4 <= busline_V_read(23 downto 16);
    tmp_48_fu_92_p4 <= busline_V_read(31 downto 24);
    tmp_49_fu_102_p4 <= busline_V_read(39 downto 32);
    tmp_50_fu_112_p4 <= busline_V_read(47 downto 40);
    tmp_8_fu_122_p9 <= (((((((tmp_fu_68_p1 & tmp_s_fu_72_p4) & tmp_47_fu_82_p4) & tmp_48_fu_92_p4) & tmp_49_fu_102_p4) & tmp_50_fu_112_p4) & tmp_46_fu_44_p4) & ap_const_lv8_0);
    tmp_fu_68_p1 <= busline_V_read(8 - 1 downto 0);
    tmp_s_fu_72_p4 <= busline_V_read(15 downto 8);
end behav;
