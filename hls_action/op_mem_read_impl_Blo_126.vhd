-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity op_mem_read_impl_Blo_126 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    read_mem_config_size_load_out_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    read_mem_config_size_load_out_out_full_n : IN STD_LOGIC;
    read_mem_config_size_load_out_out_write : OUT STD_LOGIC;
    read_mem_config_offset_out_din : OUT STD_LOGIC_VECTOR (63 downto 0);
    read_mem_config_offset_out_full_n : IN STD_LOGIC;
    read_mem_config_offset_out_write : OUT STD_LOGIC;
    din_gmem_V_offset : IN STD_LOGIC_VECTOR (57 downto 0);
    din_gmem_V_offset_out_din : OUT STD_LOGIC_VECTOR (57 downto 0);
    din_gmem_V_offset_out_full_n : IN STD_LOGIC;
    din_gmem_V_offset_out_write : OUT STD_LOGIC;
    read_mem_config_offs : IN STD_LOGIC_VECTOR (63 downto 0);
    read_mem_config_size : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of op_mem_read_impl_Blo_126 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv60_1 : STD_LOGIC_VECTOR (59 downto 0) := "000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal read_mem_config_size_load_out_out_blk_n : STD_LOGIC;
    signal read_mem_config_offset_out_blk_n : STD_LOGIC;
    signal din_gmem_V_offset_out_blk_n : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal tmp_29_i_i_i_i_fu_154_p2 : STD_LOGIC_VECTOR (58 downto 0);
    signal tmp_29_i_i_i_i_reg_198 : STD_LOGIC_VECTOR (58 downto 0);
    signal tmp_31_i_i_fu_109_p4 : STD_LOGIC_VECTOR (57 downto 0);
    signal tmp_i_i_fu_128_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_i_i_i_fu_134_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_32_i_i_fu_140_p4 : STD_LOGIC_VECTOR (57 downto 0);
    signal last_word_cast_i_i_i_fu_150_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal first_word_cast_i_i_s_fu_119_p1 : STD_LOGIC_VECTOR (58 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_29_cast26_i_i_i_s_fu_160_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal read_words_fu_166_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal tmp_29_cast_out_i_i_fu_163_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal read_words_cast_out_s_fu_172_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (din_gmem_V_offset_out_full_n = ap_const_logic_0) or (read_mem_config_offset_out_full_n = ap_const_logic_0) or (read_mem_config_size_load_out_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_29_i_i_i_i_reg_198 <= tmp_29_i_i_i_i_fu_154_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, read_mem_config_size_load_out_out_full_n, read_mem_config_offset_out_full_n, din_gmem_V_offset_out_full_n)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (din_gmem_V_offset_out_full_n = ap_const_logic_0) or (read_mem_config_offset_out_full_n = ap_const_logic_0) or (read_mem_config_size_load_out_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, read_mem_config_size_load_out_out_full_n, read_mem_config_offset_out_full_n, din_gmem_V_offset_out_full_n)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (din_gmem_V_offset_out_full_n = ap_const_logic_0) or (read_mem_config_offset_out_full_n = ap_const_logic_0) or (read_mem_config_size_load_out_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= read_mem_config_offs;
    ap_return_1 <= tmp_29_cast_out_i_i_fu_163_p1;
    ap_return_2 <= read_words_cast_out_s_fu_172_p1;

    din_gmem_V_offset_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, din_gmem_V_offset_out_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            din_gmem_V_offset_out_blk_n <= din_gmem_V_offset_out_full_n;
        else 
            din_gmem_V_offset_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    din_gmem_V_offset_out_din <= din_gmem_V_offset;

    din_gmem_V_offset_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, read_mem_config_size_load_out_out_full_n, read_mem_config_offset_out_full_n, din_gmem_V_offset_out_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (din_gmem_V_offset_out_full_n = ap_const_logic_0) or (read_mem_config_offset_out_full_n = ap_const_logic_0) or (read_mem_config_size_load_out_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            din_gmem_V_offset_out_write <= ap_const_logic_1;
        else 
            din_gmem_V_offset_out_write <= ap_const_logic_0;
        end if; 
    end process;

    first_word_cast_i_i_s_fu_119_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_31_i_i_fu_109_p4),59));
    last_word_cast_i_i_i_fu_150_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_32_i_i_fu_140_p4),59));

    read_mem_config_offset_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, read_mem_config_offset_out_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            read_mem_config_offset_out_blk_n <= read_mem_config_offset_out_full_n;
        else 
            read_mem_config_offset_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    read_mem_config_offset_out_din <= read_mem_config_offs;

    read_mem_config_offset_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, read_mem_config_size_load_out_out_full_n, read_mem_config_offset_out_full_n, din_gmem_V_offset_out_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (din_gmem_V_offset_out_full_n = ap_const_logic_0) or (read_mem_config_offset_out_full_n = ap_const_logic_0) or (read_mem_config_size_load_out_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            read_mem_config_offset_out_write <= ap_const_logic_1;
        else 
            read_mem_config_offset_out_write <= ap_const_logic_0;
        end if; 
    end process;


    read_mem_config_size_load_out_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, read_mem_config_size_load_out_out_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            read_mem_config_size_load_out_out_blk_n <= read_mem_config_size_load_out_out_full_n;
        else 
            read_mem_config_size_load_out_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    read_mem_config_size_load_out_out_din <= read_mem_config_size;

    read_mem_config_size_load_out_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, read_mem_config_size_load_out_out_full_n, read_mem_config_offset_out_full_n, din_gmem_V_offset_out_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (din_gmem_V_offset_out_full_n = ap_const_logic_0) or (read_mem_config_offset_out_full_n = ap_const_logic_0) or (read_mem_config_size_load_out_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            read_mem_config_size_load_out_out_write <= ap_const_logic_1;
        else 
            read_mem_config_size_load_out_out_write <= ap_const_logic_0;
        end if; 
    end process;

        read_words_cast_out_s_fu_172_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(read_words_fu_166_p2),64));

    read_words_fu_166_p2 <= std_logic_vector(signed(tmp_29_cast26_i_i_i_s_fu_160_p1) + signed(ap_const_lv60_1));
        tmp_29_cast26_i_i_i_s_fu_160_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_29_i_i_i_i_reg_198),60));

        tmp_29_cast_out_i_i_fu_163_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_29_i_i_i_i_reg_198),64));

    tmp_29_i_i_i_i_fu_154_p2 <= std_logic_vector(unsigned(last_word_cast_i_i_i_fu_150_p1) - unsigned(first_word_cast_i_i_s_fu_119_p1));
    tmp_31_i_i_fu_109_p4 <= read_mem_config_offs(63 downto 6);
    tmp_32_i_i_fu_140_p4 <= tmp_i_i_i_i_fu_134_p2(63 downto 6);
    tmp_i_i_fu_128_p2 <= std_logic_vector(unsigned(read_mem_config_size) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF));
    tmp_i_i_i_i_fu_134_p2 <= std_logic_vector(unsigned(tmp_i_i_fu_128_p2) + unsigned(read_mem_config_offs));
end behav;
